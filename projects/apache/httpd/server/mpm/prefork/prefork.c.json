{"module":"mpm_prefork.c","summary":"This module implements the prefork MPM for Apache HTTP Server, managing child process creation, process pools, and connection handling. It pre-forks child processes to handle requests, manages idle server counts, and handles graceful restarts and shutdowns.","logs":[{"function":"chdir_for_gprof","message_template":"gprof: error creating directory %s","reason":"Failed to create a directory for gprof output files","resolution":"Check file permissions and ensure the directory path is valid and writable"},{"function":"accept_mutex_on","message_template":"couldn't grab the accept mutex","reason":"Failed to acquire the mutex that serializes accept() calls between child processes","resolution":"Check system resources, file descriptors, and permissions for the mutex file"},{"function":"accept_mutex_off","message_template":"couldn't release the accept mutex","reason":"Failed to release the mutex that serializes accept() calls","resolution":"This may indicate a system resource issue or a bug in the mutex implementation"},{"function":"child_main","message_template":"Couldn't initialize child main thread","reason":"Failed to initialize the main thread in a child process","resolution":"Check system resources and thread limits"},{"function":"child_main","message_template":"Couldn't initialize cross-process lock in child (%s) (%s)","reason":"Failed to initialize the mutex in a child process","resolution":"Check file permissions for the lock file and system resource limits"},{"function":"child_main","message_template":"Couldn't initialize signal thread","reason":"Failed to initialize the thread that handles signals","resolution":"Check thread resource limits and system configuration"},{"function":"child_main","message_template":"Couldn't create pollset in child; check system or user limits","reason":"Failed to create pollset for listening sockets in a child process","resolution":"Increase system limits for file descriptors or reduce the number of listeners"},{"function":"child_main","message_template":"Couldn't add listener to pollset; check system or user limits","reason":"Failed to add a listener socket to the pollset in a child process","resolution":"Increase system limits for file descriptors or reduce the number of listeners"},{"function":"child_main","message_template":"apr_pollset_poll: (listen)","reason":"Error in poll() operation while listening for connections","resolution":"Check system for resource issues and proper socket configuration"},{"function":"child_main","message_template":"accept() on client socket failed","reason":"Failed to accept an incoming connection","resolution":"Check for network connectivity issues or system resource limits"},{"function":"make_child","message_template":"fork: Unable to fork new process","reason":"Failed to create a new child process using fork()","resolution":"Check system process limits and available memory"},{"function":"make_child","message_template":"processor unbind failed","reason":"Failed to unbind the process from a specific processor","resolution":"This is mostly an AIX-specific message, check system processor binding permissions"},{"function":"perform_idle_server_maintenance","message_template":"server reached MaxRequestWorkers setting, consider raising the MaxRequestWorkers setting","reason":"Server has reached the maximum number of worker processes","resolution":"Increase MaxRequestWorkers setting if the system has resources to support more workers"},{"function":"perform_idle_server_maintenance","message_template":"server seems busy, (you may need to increase StartServers, or Min\/MaxSpareServers), spawning %d children, there are %d idle, and %d total children","reason":"Server is busy with too few idle workers available","resolution":"Adjust StartServers, MinSpareServers, or MaxSpareServers settings to better handle the load"},{"function":"prefork_run","message_template":"killpg SIGHUP","reason":"Error sending SIGHUP signal to process group","resolution":"Check that the server has permission to signal its child processes"},{"function":"prefork_run","message_template":"could not duplicate listeners","reason":"Failed to duplicate the listening sockets across multiple processes","resolution":"Check file descriptor limits and system resources"},{"function":"prefork_run","message_template":"could not open pipe-of-death","reason":"Failed to create the interprocess communication pipe used to signal child shutdown","resolution":"Check file descriptor limits and system resources"},{"function":"prefork_run","message_template":"could not create accept mutex","reason":"Failed to create the mutex used to serialize accept() calls","resolution":"Check file permissions in the mutex directory and system resource limits"},{"function":"prefork_run","message_template":"%s configured -- resuming normal operations","reason":"Informational message that the server has started or resumed operations","resolution":"Information log, no resolution required"},{"function":"prefork_run","message_template":"Server built: %s","reason":"Informational message showing the server build timestamp","resolution":"Information log, no resolution required"},{"function":"prefork_run","message_template":"Accept mutex: %s (default: %s)","reason":"Informational message showing the accept mutex type in use","resolution":"Information log, no resolution required"},{"function":"prefork_run","message_template":"Ignoring fatal error in child of previous generation (pid %ld).","reason":"A child process from a previous generation encountered a fatal error","resolution":"Check the logs for previous errors from this specific PID"},{"function":"prefork_run","message_template":"long lost child came home! (pid %ld)","reason":"A child process that was thought to be gone has reappeared","resolution":"This is unusual and might indicate an issue with process tracking"},{"function":"prefork_run","message_template":"killpg SIGTERM","reason":"Error sending SIGTERM signal to process group","resolution":"Check that the server has permission to signal its child processes"},{"function":"prefork_run","message_template":"caught SIGTERM, shutting down","reason":"The server received a SIGTERM signal and is shutting down","resolution":"Normal shutdown message, no resolution required"},{"function":"prefork_run","message_template":"caught %s, shutting down gracefully","reason":"The server received a signal requesting graceful shutdown","resolution":"Normal graceful shutdown message, no resolution required"},{"function":"prefork_run","message_template":"Graceful restart requested, doing restart","reason":"The server is performing a graceful restart","resolution":"Normal restart message, no resolution required"},{"function":"prefork_run","message_template":"SIGHUP received. Attempting to restart","reason":"The server received a SIGHUP signal and is restarting","resolution":"Normal restart message, no resolution required"},{"function":"prefork_run","message_template":"no listening sockets available, shutting down","reason":"The server couldn't set up any listening sockets","resolution":"Check port availability, permissions, and ensure no other process is using the configured ports"},{"function":"prefork_run","message_template":"apr_proc_detach failed","reason":"Failed to detach the server process from the terminal","resolution":"Check for system resource issues and permissions"},{"function":"prefork_check_config","message_template":"WARNING: ServerLimit of %d exceeds compile-time limit of %d servers, decreasing to %d.","reason":"The configured ServerLimit exceeds the maximum allowed value","resolution":"Reduce the ServerLimit directive to a value at or below the maximum"},{"function":"prefork_check_config","message_template":"WARNING: ServerLimit of %d not allowed, increasing to 1.","reason":"The configured ServerLimit is too low (less than 1)","resolution":"Increase the ServerLimit directive to at least 1"},{"function":"prefork_check_config","message_template":"changing ServerLimit to %d from original value of %d not allowed during restart","reason":"ServerLimit cannot be changed during a restart","resolution":"Keep the ServerLimit the same as the previous run or perform a full stop\/start instead of a restart"},{"function":"prefork_check_config","message_template":"WARNING: MaxRequestWorkers of %d exceeds ServerLimit value of %d servers, decreasing MaxRequestWorkers to %d. To increase, please see the ServerLimit directive.","reason":"MaxRequestWorkers exceeds the ServerLimit","resolution":"Either decrease MaxRequestWorkers or increase ServerLimit to match or exceed MaxRequestWorkers"},{"function":"prefork_check_config","message_template":"WARNING: MaxRequestWorkers of %d not allowed, increasing to 1.","reason":"The configured MaxRequestWorkers is too low (less than 1)","resolution":"Increase the MaxRequestWorkers directive to at least 1"},{"function":"prefork_check_config","message_template":"WARNING: StartServers of %d not allowed, increasing to 1.","reason":"The configured StartServers is too low (less than 1)","resolution":"Increase the StartServers directive to at least 1"},{"function":"prefork_check_config","message_template":"WARNING: MinSpareServers of %d not allowed, increasing to 1 to avoid almost certain server failure. Please read the documentation.","reason":"The configured MinSpareServers is too low (less than 1)","resolution":"Increase the MinSpareServers directive to at least 1"},{"function":"set_max_clients","message_template":"MaxClients is deprecated, use MaxRequestWorkers instead.","reason":"The MaxClients directive is deprecated","resolution":"Use MaxRequestWorkers directive instead of MaxClients"},{"function":"prefork_open_logs","message_template":"no listening sockets available, shutting down","reason":"The server couldn't set up any listening sockets during startup","resolution":"Check port availability, permissions, and ensure no other process is using the configured ports"}],"project":"apache\/httpd"}