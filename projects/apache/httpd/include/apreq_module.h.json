{"module":"apreq_module.h","summary":"This module defines the API interface for libapreq2, a library for handling HTTP request data (cookies, query strings, and request body parameters). It provides a standardized way for modules to interact with and process HTTP request components.","logs":[{"function":"apreq_module_status_is_error","message_template":"APR_SUCCESS, APR_INCOMPLETE, APR_EINIT, APREQ_ERROR_NODATA, APREQ_ERROR_NOPARSER, APREQ_ERROR_NOHEADER","reason":"Checks whether a status code returned by an apreq_module_t method is considered fatal or non-fatal","resolution":"These are status codes, not actual log messages. The resolution depends on the specific error being handled. Check the status code documentation for specific remediation steps."},{"function":"apreq_jar","message_template":"APR_SUCCESS or a module-specific error status code","reason":"Function for exposing the parsed 'cookie' header, may return error status","resolution":"If an error is returned, check that the cookie header is properly formatted and that the module implementation is functioning correctly."},{"function":"apreq_args","message_template":"APR_SUCCESS or a module-specific error status code","reason":"Function for exposing the parsed query string, may return error status when query string cannot be parsed","resolution":"Verify that the query string is properly formatted and that the module implementation is functioning correctly."},{"function":"apreq_body","message_template":"APR_SUCCESS or a module-specific error status code","reason":"Function for exposing the parsed request body, may return error status when the body cannot be parsed","resolution":"Check that the request body is valid and properly formatted according to the Content-Type header. Verify that the appropriate parser is being used."},{"function":"apreq_parser_get","message_template":"APR_SUCCESS or module-specific error","reason":"Function to fetch the active body parser, may return error if parser is not available","resolution":"Ensure that a parser has been properly set for the request body based on its Content-Type."},{"function":"apreq_parser_set","message_template":"APR_SUCCESS or module-specific error","reason":"Function to set the body parser for a request, may return error if parser cannot be set","resolution":"Verify that the parser is compatible with the request body type and that it's properly initialized."},{"function":"apreq_hook_add","message_template":"APR_SUCCESS or module-specific error","reason":"Function to add a parser hook, may return error if the hook cannot be added","resolution":"Check that the hook is properly initialized and that there's enough memory to add it."},{"function":"apreq_brigade_limit_set","message_template":"APR_SUCCESS or module-specific error","reason":"Function to set the active brigade limit, may return error if limit cannot be set","resolution":"Ensure the brigade limit value is reasonable and that the module supports changing this limit."},{"function":"apreq_brigade_limit_get","message_template":"APR_SUCCESS or a module-specific error","reason":"Function to get the active brigade limit, may return error leaving bytes undefined","resolution":"If this fails, the module may not support retrieving the brigade limit. Check module documentation."},{"function":"apreq_read_limit_set","message_template":"APR_SUCCESS or a module-specific error","reason":"Function to set the active read limit, may return error if limit cannot be set","resolution":"Ensure the read limit value is reasonable and that the module supports changing this limit."},{"function":"apreq_read_limit_get","message_template":"APR_SUCCESS or a module-specific error","reason":"Function to get the active read limit, may return error leaving bytes undefined","resolution":"If this fails, the module may not support retrieving the read limit. Check module documentation."},{"function":"apreq_temp_dir_set","message_template":"APR_SUCCESS or a module-specific error","reason":"Function to set the active temp directory, may return error if directory cannot be set","resolution":"Verify that the path exists, is writable, and that the module supports changing the temp directory."},{"function":"apreq_temp_dir_get","message_template":"APR_SUCCESS or a module-specific error","reason":"Function to get the active temp directory, may return error leaving path undefined","resolution":"If this fails, the module may not support retrieving the temp directory. Check module documentation."}],"project":"apache\/httpd"}