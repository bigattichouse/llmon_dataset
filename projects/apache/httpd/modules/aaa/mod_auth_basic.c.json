{"module":"mod_auth_basic.c","summary":"This module implements HTTP Basic Authentication by providing access control based on username and password verification. It supports multiple authentication providers, optional digest algorithm verification, and can generate fake authentication headers for proxied applications.","logs":[{"function":"add_authn_provider","message_template":"Unknown Authn provider: %s","reason":"The specified authentication provider is not registered with the server. This occurs when a configuration uses an authentication provider that doesn't exist or isn't loaded.","resolution":"Check the spelling of the provider name in the AuthBasicProvider directive. Ensure the corresponding authentication module (e.g., mod_authn_file, mod_authn_dbd) is loaded in the server configuration."},{"function":"add_authn_provider","message_template":"The '%s' Authn provider doesn't support Basic Authentication","reason":"The specified authentication provider doesn't implement the check_password function required for Basic Authentication.","resolution":"Choose a different authentication provider that supports Basic Authentication. Common providers include 'file', 'dbd', 'ldap', etc. Check the provider's documentation to ensure it supports Basic Authentication."},{"function":"get_basic_auth","message_template":"client used wrong authentication scheme: %s","reason":"The client attempted to authenticate using a scheme other than 'Basic' when Basic Authentication was required.","resolution":"Ensure the client is properly implementing Basic Authentication. This may occur with misconfigured clients or when multiple authentication methods are configured incorrectly."},{"function":"authenticate_basic_user","message_template":"need AuthName: %s","reason":"Basic Authentication requires an authentication realm name, but none was configured with AuthName directive.","resolution":"Add an 'AuthName' directive to your configuration to specify the authentication realm. For example: AuthName \"Private Area\""},{"function":"authenticate_basic_user","message_template":"No Authn provider configured","reason":"No authentication provider is available to validate credentials. This occurs when no provider is specified and the default provider isn't available.","resolution":"Configure an authentication provider using the AuthBasicProvider directive (e.g., AuthBasicProvider file). Ensure the corresponding authentication module is loaded."},{"function":"authenticate_basic_user","message_template":"Authn provider does not support AuthBasicUseDigestAlgorithm","reason":"The current authentication provider doesn't support the get_realm_hash method required when AuthBasicUseDigestAlgorithm is set to MD5.","resolution":"Either disable AuthBasicUseDigestAlgorithm by setting it to 'Off' or switch to an authentication provider that supports digest algorithm (most providers do not support this feature)."},{"function":"authenticate_basic_user","message_template":"user %s: authentication failure for \"%s\": Password Mismatch","reason":"The provided password doesn't match the stored password for the user. Authentication failed due to incorrect credentials.","resolution":"Ensure the user is providing the correct password. If needed, reset the user's password in the authentication backend (password file, database, etc.)."},{"function":"authenticate_basic_user","message_template":"user %s not found: %s","reason":"The specified username doesn't exist in the authentication backend. This occurs when a user attempts to authenticate with an unknown username.","resolution":"Verify the username is correct. If the user should have access, add the username to the authentication backend (password file, database, etc.)."},{"function":"authenticate_basic_fake","message_template":"AuthBasicFake: could not evaluate user expression for URI '%s': %s","reason":"The server couldn't evaluate the expression specified in the AuthBasicFake directive for the username. This is a configuration error.","resolution":"Check the syntax of the username expression in the AuthBasicFake directive. Expressions must be valid according to Apache's expression syntax. Verify variables used exist in the current context."},{"function":"authenticate_basic_fake","message_template":"AuthBasicFake: empty username expression for URI '%s', ignoring","reason":"The evaluated username expression produced an empty result. The fake authentication is ignored in this case.","resolution":"Modify the username expression in AuthBasicFake to ensure it evaluates to a non-empty value under all conditions. This is an informational message and may be expected if conditional expressions are used."},{"function":"authenticate_basic_fake","message_template":"AuthBasicFake: could not evaluate password expression for URI '%s': %s","reason":"The server couldn't evaluate the expression specified in the AuthBasicFake directive for the password. This is a configuration error.","resolution":"Check the syntax of the password expression in the AuthBasicFake directive. Expressions must be valid according to Apache's expression syntax. Verify variables used exist in the current context."},{"function":"authenticate_basic_fake","message_template":"AuthBasicFake: empty password expression for URI '%s', ignoring","reason":"The evaluated password expression produced an empty result. The fake authentication is ignored in this case.","resolution":"Modify the password expression in AuthBasicFake to ensure it evaluates to a non-empty value under all conditions. This is an informational message and may be expected if conditional expressions are used."},{"function":"authenticate_basic_fake","message_template":"AuthBasicFake: \"Authorization: %s\"","reason":"Informational message showing the generated Authorization header for debugging purposes. This occurs when fake authentication is successfully configured.","resolution":"This is an informational log entry that doesn't require resolution. It confirms that fake authentication is working correctly."}],"project":"apache\/httpd"}