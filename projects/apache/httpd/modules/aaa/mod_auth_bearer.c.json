{"module":"mod_auth_bearer.c","summary":"This Apache module implements RFC6750 Bearer token authentication, providing functionality to both generate and validate Bearer tokens for HTTP authentication. It allows configuring authentication providers, controlling authorization behavior, and setting up proxy authentication with Bearer tokens.","logs":[{"function":"add_autht_provider","message_template":"Unknown Autht provider: %s","reason":"Logs an error when the specified authentication provider name is not registered with the server. This occurs during configuration when an admin specifies a non-existent provider.","resolution":"Check that the AuthBearerProvider name is correctly spelled and that the corresponding module is loaded. Ensure the provider module is installed and enabled in the server configuration."},{"function":"add_autht_provider","message_template":"The '%s' Autht provider doesn't support Bearer Authentication","reason":"Logs an error when the specified authentication provider does not implement the check_token function required for Bearer authentication.","resolution":"Configure a different authentication provider that supports Bearer token authentication. Make sure the specified provider is compatible with mod_auth_bearer."},{"function":"set_bearer_proxy","message_template":"Could not parse proxy expression '%s': %s","reason":"Logs an error when the expression provided to AuthBearerProxy directive cannot be parsed correctly.","resolution":"Check the syntax of the expression in the AuthBearerProxy directive. Fix any syntax errors or malformed expressions according to Apache's expression syntax rules."},{"function":"get_bearer_auth","message_template":"client used wrong authentication scheme: %s","reason":"Logs an error when a client attempts to authenticate using a scheme other than Bearer. This happens when the Authorization header contains an incorrect scheme.","resolution":"Clients must use the 'Bearer' authentication scheme in the Authorization header. Update client code to send the proper Authorization header format: 'Authorization: Bearer <token>'."},{"function":"authenticate_bearer_token","message_template":"need AuthName: %s","reason":"Logs an error when Bearer authentication is configured but no AuthName has been specified in the configuration.","resolution":"Add an AuthName directive to the configuration to specify the authentication realm name. Example: 'AuthName \"My Protected Area\"'."},{"function":"authenticate_bearer_token","message_template":"No Autht provider configured","reason":"Logs an error when no authentication provider is configured or available for use with Bearer authentication.","resolution":"Configure at least one authentication provider using the AuthBearerProvider directive. The default provider is 'jwt' if available, but explicitly configuring a provider is recommended."},{"function":"authenticate_bearer_token","message_template":"bearer token %s: authentication failure for \"%s\": Token Rejected","reason":"Logs an error when a Bearer token is explicitly rejected by the authentication provider. This indicates the token was recognized but deemed invalid.","resolution":"Verify that the token is valid and properly formatted. Check that the token has not been revoked and matches the expected format for the configured authentication provider."},{"function":"authenticate_bearer_token","message_template":"bearer token %s: authentication failure for \"%s\": Token has expired","reason":"Logs an error when a Bearer token is rejected because it has expired. The token's expiration timestamp is in the past.","resolution":"The client needs to obtain a new token. Configure the token issuer to provide tokens with longer expiration times if needed, or implement token refresh mechanisms."},{"function":"authenticate_bearer_token","message_template":"bearer token %s: authentication failure for \"%s\": Token is not yet valid","reason":"Logs an error when a Bearer token is rejected because it's not yet valid. The token's not-before timestamp is in the future.","resolution":"Check for clock synchronization issues between the token issuer and the server. Wait until the token becomes valid, or obtain a token with an immediate validity period."},{"function":"authenticate_bearer_token","message_template":"bearer token %s: did not match '%s': %s","reason":"Logs an error when a Bearer token does not match the expected realm or other validation criteria.","resolution":"Verify that the token is issued for the correct realm and contains the expected claims\/attributes. Check that the token is being presented to the appropriate endpoint."},{"function":"authenticate_bearer_fixup","message_template":"AuthBearerProxy: could not evaluate token expression for URI '%s': %s","reason":"Logs an error when the token expression provided for proxy authentication cannot be evaluated successfully.","resolution":"Check the AuthBearerProxy expression syntax and logic. Ensure all referenced variables or functions are available during evaluation and fix any syntax or runtime errors in the expression."},{"function":"authenticate_bearer_fixup","message_template":"AuthBearerProxy: empty token expression for URI '%s', ignoring","reason":"Logs an informational message when the token expression for proxy authentication evaluates to an empty string, causing the proxy authentication to be skipped.","resolution":"If proxy authentication is needed, modify the AuthBearerProxy expression to ensure it generates a non-empty token. If this behavior is expected, no action is required."},{"function":"authenticate_bearer_fixup","message_template":"AuthBearerProxy: \"Authorization: %s\"","reason":"Logs an informational message showing the Authorization header that will be used for proxy authentication.","resolution":"Information log, no resolution required. This is useful for debugging to confirm the correct Authorization header is being generated."}],"project":"apache\/httpd"}