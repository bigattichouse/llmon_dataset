{"module":"ssl_engine_kernel.c","summary":"This module is part of Apache's mod_ssl module that handles the core SSL\/TLS functionality. It manages SSL connections, certificate verification, protocol negotiation, session caching, and various TLS extensions like SNI and ALPN.","logs":[{"function":"upgrade_connection","message_template":"upgrading connection to TLS","reason":"Logs when a connection is being upgraded from HTTP to HTTPS per RFC 2817","resolution":"Informational log, no resolution required"},{"function":"upgrade_connection","message_template":"failed to send 101 interim response for connection upgrade","reason":"Indicates a failure to send the HTTP 101 status code during TLS upgrade","resolution":"Check client connection stability and server resources. May indicate network issues or connection problems."},{"function":"upgrade_connection","message_template":"TLS upgrade handshake failed","reason":"The TLS handshake after attempting upgrade protocol has failed","resolution":"Check client TLS compatibility, certificate configuration, and network connectivity."},{"function":"ssl_hook_ReadReq","message_template":"%s HTTPS request received for child %ld (server %s)","reason":"Logs information about incoming HTTPS requests, including whether it's an initial or subsequent request","resolution":"Informational log, no resolution required"},{"function":"ssl_hook_ReadReq","message_template":"Reason: You're speaking plain HTTP to an SSL-enabled server port.<br \/>\n Instead use the HTTPS scheme to access this URL, please.<br \/>\n","reason":"Client sent a plain HTTP request to a port configured for HTTPS","resolution":"Configure your client to use HTTPS instead of HTTP for this URL"},{"function":"ssl_hook_ReadReq","message_template":"Hostname %s provided via SNI, but no hostname provided in HTTP request","reason":"Client provided a hostname via SNI TLS extension but didn't send a Host header in the HTTP request","resolution":"Ensure client properly sends Host header in HTTP requests matching SNI hostname"},{"function":"ssl_hook_ReadReq","message_template":"Hostname %s provided via SNI and hostname %s provided via HTTP have no compatible SSL setup","reason":"The server hostname provided via SNI and HTTP headers don't share compatible SSL configurations","resolution":"Ensure virtual hosts with the same name have compatible SSL configurations or check client for proper hostname usage"},{"function":"ssl_hook_ReadReq","message_template":"No hostname was provided via SNI for a name based virtual host","reason":"When strict_sni_vhost_check is enabled, client must provide SNI but didn't","resolution":"Ensure client supports SNI and provides hostname during TLS handshake or disable strict_sni_vhost_check if necessary"},{"function":"ssl_hook_ReadReq","message_template":"Reason: The client software did not provide a hostname using Server Name Indication (SNI), which is required to access this server.<br \/>\n","reason":"Client is required to use SNI but didn't provide a hostname via TLS extension","resolution":"Use a client that supports SNI and configure it to provide the hostname during TLS handshake"},{"function":"ssl_hook_Access_classic","message_template":"Unable to reconfigure (per-directory) permitted SSL ciphers","reason":"Failed to set the cipher list for a specific directory configuration","resolution":"Check the SSLCipherSuite directive for that directory and ensure it contains valid cipher specifications"},{"function":"ssl_hook_Access_classic","message_template":"Reconfigured cipher suite will force renegotiation","reason":"A different cipher suite has been configured for this location, requiring SSL renegotiation","resolution":"Informational log, no resolution required"},{"function":"ssl_hook_Access_classic","message_template":"Changed client verification type will force %srenegotiation","reason":"The client verification requirements have changed, requiring SSL renegotiation","resolution":"Informational log, no resolution required"},{"function":"ssl_hook_Access_classic","message_template":"Reduced client verification depth will force renegotiation","reason":"The maximum depth for client certificate verification has been reduced for this location","resolution":"Informational log, no resolution required"},{"function":"ssl_hook_Access_classic","message_template":"Non-default virtual host with SSLVerify set to 'require' and VirtualHost-specific CA certificate list is only available to clients with TLS server name indication (SNI) support","reason":"Mismatch between configuration and client capability - client certificate verification is required but can't be performed without SNI","resolution":"Either ensure all clients support SNI or reconfigure verification settings to be compatible across virtual hosts"},{"function":"ssl_hook_Access_classic","message_template":"could not buffer message body to allow SSL renegotiation to proceed","reason":"The request body couldn't be buffered temporarily during the SSL renegotiation process","resolution":"Increase the SSL renegotiation buffer size or check if the request body is too large. May need to adjust SSLRenegBufferSize."},{"function":"ssl_hook_Access_classic","message_template":"insecure SSL re-negotiation required, but a pipelined request is present; keepalive disabled","reason":"During renegotiation, pipelined data was detected which might be vulnerable to a MITM attack (CVE-2009-3555)","resolution":"Connection will be closed after this request for security reasons. Consider upgrading client to support secure renegotiation."},{"function":"ssl_hook_Access_classic","message_template":"Performing full renegotiation: complete handshake protocol (%s support secure renegotiation)","reason":"A full SSL\/TLS renegotiation is being performed, with indication of secure renegotiation support","resolution":"Informational log, no resolution required"},{"function":"ssl_hook_Access_classic","message_template":"error setting SSL session context","reason":"Failed to set the SSL session context during renegotiation","resolution":"Check server resources, configuration, and OpenSSL status. May indicate memory issues or OpenSSL errors."},{"function":"ssl_hook_Access_classic","message_template":"Re-negotiation request failed","reason":"The request to renegotiate the SSL\/TLS connection has failed","resolution":"Check client SSL\/TLS compatibility and configuration. May indicate an incompatible or buggy client implementation."},{"function":"ssl_hook_Access_classic","message_template":"Awaiting re-negotiation handshake","reason":"Server is waiting for the client to complete the renegotiation handshake","resolution":"Informational log, no resolution required"},{"function":"ssl_hook_Access_classic","message_template":"Re-negotiation handshake failed","reason":"The SSL\/TLS renegotiation handshake process has failed","resolution":"Check client SSL\/TLS implementation, compatibility issues, or network connectivity problems. May require client upgrade."},{"function":"ssl_hook_Access_classic","message_template":"Re-negotiation handshake failed: Client verification failed","reason":"The renegotiation handshake failed because client certificate verification failed","resolution":"Ensure client is providing a valid certificate that can be verified against configured CA certificates"},{"function":"ssl_hook_Access_classic","message_template":"Re-negotiation handshake failed: Client certificate missing","reason":"The renegotiation handshake failed because a client certificate was required but not provided","resolution":"Configure client to provide a certificate when requested or adjust server settings if client certificates are optional"},{"function":"ssl_hook_Access_classic","message_template":"SSL cipher suite not renegotiated: access to %s denied using cipher %s","reason":"Access denied because the cipher being used doesn't match the required cipher suite after renegotiation","resolution":"Configure client to support stronger ciphers or adjust SSLCipherSuite directive to include ciphers supported by client"},{"function":"ssl_hook_Access_modern","message_template":"Reduced client verification depth will force renegotiation","reason":"The verification depth for TLSv1.3 has been reduced, requiring reauthentication","resolution":"Informational log, no resolution required"},{"function":"ssl_hook_Access_modern","message_template":"could not buffer message body to allow TLS Post-Handshake Authentication to proceed","reason":"Failed to buffer the request body for TLSv1.3 post-handshake authentication","resolution":"Increase the SSL renegotiation buffer size or check if the request body is too large. May need to adjust SSLRenegBufferSize."},{"function":"ssl_hook_Access_modern","message_template":"verify client post handshake","reason":"TLSv1.3 post-handshake client verification is being performed","resolution":"Informational log, no resolution required"},{"function":"ssl_hook_Access_modern","message_template":"cannot perform post-handshake authentication","reason":"TLSv1.3 post-handshake authentication could not be performed","resolution":"Check client TLSv1.3 implementation and support for post-handshake authentication. May require client update."},{"function":"ssl_hook_Access_modern","message_template":"Reason: Cannot perform Post-Handshake Authentication.<br \/>","reason":"Client error message explaining post-handshake authentication failure","resolution":"Client needs to support TLSv1.3 post-handshake authentication feature"},{"function":"ssl_hook_Access_modern","message_template":"TLS handshake failure","reason":"The TLSv1.3 handshake process has failed","resolution":"Check client and server TLS compatibility and configurations. Review logs for more specific error details."},{"function":"ssl_hook_Access","message_template":"access to %s failed, reason: %s","reason":"Access to the requested resource failed for a specific reason, such as SSL connection required","resolution":"Follow the advice in the specific reason message, such as using HTTPS instead of HTTP"},{"function":"ssl_hook_Access","message_template":"Failed to set r->user to '%s'","reason":"Failed to set the authenticated user from the client certificate","resolution":"Check SSLUserName configuration and ensure the specified certificate field exists in client certificates"},{"function":"ssl_hook_Access","message_template":"access to %s failed, reason: Failed to execute SSL requirement expression: %s","reason":"A SSLRequire expression failed to execute properly","resolution":"Check and fix the SSLRequire expression syntax or logic"},{"function":"ssl_hook_Access","message_template":"Access to %s denied for %s (requirement expression not fulfilled)","reason":"Access denied because the client didn't meet SSL requirements specified in SSLRequire","resolution":"Ensure client meets the requirements specified in the SSLRequire directive or modify the expression"},{"function":"ssl_hook_Access","message_template":"Failed expression: %s","reason":"The specific SSLRequire expression that failed, providing debugging information","resolution":"Review and modify the SSLRequire expression to correct the logic"},{"function":"ssl_hook_UserCheck","message_template":"Encountered FakeBasicAuth spoof: %s","reason":"Detected a potential attempt to spoof FakeBasicAuth by directly setting Basic auth headers","resolution":"Investigate potential security issue - someone may be attempting to bypass authentication"},{"function":"ssl_hook_UserCheck","message_template":"Failed to set FakeBasicAuth username to '%s', did not exist in certificate","reason":"The field specified in SSLUserName directive doesn't exist in the client certificate","resolution":"Check the SSLUserName directive and ensure it specifies a field that exists in client certificates"},{"function":"ssl_hook_UserCheck","message_template":"Cannot use FakeBasicAuth for username containing a colon: %s","reason":"The username extracted from the certificate contains a colon, which isn't compatible with HTTP Basic auth","resolution":"Modify certificate contents or SSLUserName directive to use a field that won't contain colons"},{"function":"ssl_hook_UserCheck","message_template":"Faking HTTP Basic Auth header: \"Authorization: %s\"","reason":"FakeBasicAuth is creating a HTTP Basic Authentication header from the client certificate","resolution":"Informational log, no resolution required"},{"function":"ssl_callback_SRPServerParams","message_template":"handing out built-in DH parameters for %d-bit authenticated connection","reason":"Using built-in Diffie-Hellman parameters for a connection with specified security strength","resolution":"Informational log, no resolution required"},{"function":"ssl_callback_SSLVerify","message_template":"Certificate Verification, depth %d, CRL checking mode: %s (%x)","reason":"Logs certificate verification process with depth and CRL checking mode","resolution":"Informational log, no resolution required"},{"function":"ssl_callback_SSLVerify","message_template":"Certificate Verification: Verifiable Issuer is configured as optional, therefore we're accepting the certificate","reason":"Accepting a certificate with verification issues because SSLVerifyClient is set to optional_no_ca","resolution":"For stricter security, consider changing SSLVerifyClient to 'require' if trusted CA verification is important"},{"function":"ssl_callback_SSLVerify","message_template":"cannot perform OCSP validation for cert if issuer has not been verified (optional_no_ca configured)","reason":"OCSP validation can't be performed when SSLVerifyClient is optional_no_ca and issuer can't be verified","resolution":"Change SSLVerifyClient to 'require' if OCSP validation is needed"},{"function":"ssl_callback_SSLVerify","message_template":"Certificate Verification: Error (%d): %s","reason":"Certificate verification resulted in an error, with error code and description","resolution":"Check certificate validity, CA configuration, and CRL settings based on the specific error"},{"function":"ssl_callback_SSLVerify","message_template":"Certificate Verification: Certificate Chain too long (chain has %d certificates, but maximum allowed are only %d)","reason":"Certificate chain exceeds the maximum allowed verification depth","resolution":"Increase SSLVerifyDepth or simplify certificate chain in use"},{"function":"ssl_callback_proxy_cert","message_template":"Proxy client certificate callback: (%s) entered","reason":"The proxy client certificate callback function has been invoked","resolution":"Informational log, no resolution required"},{"function":"ssl_callback_proxy_cert","message_template":"Proxy client certificate callback: (%s) downstream server wanted client certificate but none are configured","reason":"A proxy connection requires a client certificate but none are configured","resolution":"Configure SSLProxyMachineCertificateFile or similar directives to provide certificates for proxy connections"},{"function":"ssl_callback_proxy_cert","message_template":"Proxy client certificate callback: (%s) no acceptable CA list","reason":"No CA list was provided by the downstream server, using first available certificate","resolution":"Informational log, no resolution required"},{"function":"ssl_callback_proxy_cert","message_template":"Proxy client certificate callback: (%s) found acceptable cert","reason":"Found a certificate matching the CA requirements of the downstream server","resolution":"Informational log, no resolution required"},{"function":"ssl_callback_proxy_cert","message_template":"Proxy client certificate callback: (%s) found acceptable cert by intermediate CA","reason":"Found a certificate via intermediate CA matching the requirements","resolution":"Informational log, no resolution required"},{"function":"ssl_callback_proxy_cert","message_template":"Proxy client certificate callback: (%s) no client certificate found!?","reason":"No matching certificate could be found despite earlier checks","resolution":"Check SSLProxyMachineCertificateFile configuration and ensure certificates match downstream server requirements"},{"function":"ssl_session_log","message_template":"Inter-Process Session Cache: request=%s status=%s id=%s %s(session %s)","reason":"Logs SSL session cache operations for debugging","resolution":"Informational log, no resolution required"},{"function":"ssl_callback_Info","message_template":"rejecting client initiated renegotiation","reason":"Client attempted to initiate SSL\/TLS renegotiation which is blocked for security reasons","resolution":"Update client to respect server's rejection of renegotiation or disable renegotiation blocking if required (not recommended)"},{"function":"ssl_callback_Info","message_template":"Protocol: %s, Cipher: %s (%s\/%s bits)","reason":"Logs the negotiated SSL\/TLS protocol and cipher after handshake completion","resolution":"Informational log, no resolution required"},{"function":"init_vhost","message_template":"SSL virtual host for servername %s found","reason":"Successfully found a matching SSL virtual host for the SNI servername","resolution":"Informational log, no resolution required"},{"function":"init_vhost","message_template":"No matching SSL virtual host for servername %s found (using default\/first virtual host)","reason":"Could not find a matching SSL virtual host for the SNI servername, using default","resolution":"If specific virtual host behavior is needed, ensure a matching ServerName or ServerAlias is configured"},{"function":"init_vhost","message_template":"Server name not provided via TLS extension (using default\/first virtual host)","reason":"No SNI was provided in the TLS connection, using default virtual host","resolution":"Informational log, no resolution required"},{"function":"set_challenge_creds","message_template":"Failed to parse PEM of challenge certificate %s","reason":"Failed to parse the PEM format challenge certificate","resolution":"Check the certificate file format and ensure it's valid PEM format"},{"function":"set_challenge_creds","message_template":"Failed to configure challenge certificate %s","reason":"Failed to configure the certificate for TLS-ALPN challenge","resolution":"Check certificate validity and format"},{"function":"set_challenge_creds","message_template":"error '%s' using Challenge key: %s","reason":"Error using the private key for TLS-ALPN challenge","resolution":"Check private key validity, format, and permissions"},{"function":"set_challenge_creds","message_template":"Challenge certificate and private key %s do not match","reason":"The certificate and private key provided for TLS-ALPN challenge don't match","resolution":"Ensure the certificate and private key are a matching pair"},{"function":"ssl_callback_alpn_select","message_template":"ALPN client protocol list empty","reason":"Client sent an empty ALPN protocol list, which is invalid","resolution":"Check client ALPN implementation for bugs or update client"},{"function":"ssl_callback_alpn_select","message_template":"ALPN protocol identifier too long","reason":"Client sent an ALPN protocol identifier exceeding the valid length","resolution":"Check client for compliance with RFC 7301 or potential malicious behavior"},{"function":"ssl_callback_alpn_select","message_template":"ALPN negotiated protocol name too long","reason":"The selected ALPN protocol name is too long to be valid","resolution":"Check ALPN protocol configuration on server and ensure compliance with RFC 7301"},{"function":"ssl_callback_alpn_select","message_template":"protocol switch to '%s' failed","reason":"Failed to switch to the negotiated protocol via ALPN","resolution":"Check that the selected protocol is properly implemented and configured on the server"},{"function":"ssl_callback_SessionTicket","message_template":"TLS session ticket key for %s successfully set, creating new session ticket","reason":"Successfully configured session ticket encryption for creating new tickets","resolution":"Informational log, no resolution required"},{"function":"ssl_callback_SessionTicket","message_template":"TLS session ticket key for %s successfully set, decrypting existing session ticket","reason":"Successfully configured session ticket decryption for existing tickets","resolution":"Informational log, no resolution required"}],"project":"apache\/httpd"}