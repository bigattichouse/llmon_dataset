{"module":"ssl_util.c","summary":"Part of mod_ssl, this module provides utility functions for SSL\/TLS handling in Apache HTTP Server, including SSL thread safety mechanisms, virtual host identification, and crypto utility functions.","logs":[{"function":"ssl_dyn_create_function","message_template":"Creating dynamic lock","reason":"Logs the creation of a dynamic lock for OpenSSL thread safety. This is an informational trace message.","resolution":"Information log, no resolution required."},{"function":"ssl_dyn_create_function","message_template":"Failed to create thread mutex for dynamic lock","reason":"Logs a failure to create the mutex needed for OpenSSL thread safety. This occurs when system resources are exhausted or have permission issues.","resolution":"Check system resource limits, particularly on maximum number of mutexes or semaphores. May require increasing system limits or reducing load on the server."},{"function":"ssl_dyn_lock_function","message_template":"Acquiring mutex %s:%d","reason":"Trace log indicating the server is attempting to acquire a mutex for thread safety. Includes file and line information for debugging.","resolution":"Information log, no resolution required."},{"function":"ssl_dyn_lock_function","message_template":"Mutex %s:%d acquired!","reason":"Trace log confirming successful acquisition of a mutex for thread safety. Includes file and line information for debugging.","resolution":"Information log, no resolution required."},{"function":"ssl_dyn_lock_function","message_template":"Releasing mutex %s:%d","reason":"Trace log indicating the server is releasing a previously held mutex. Includes file and line information for debugging.","resolution":"Information log, no resolution required."},{"function":"ssl_dyn_lock_function","message_template":"Mutex %s:%d released!","reason":"Trace log confirming successful release of a mutex. Includes file and line information for debugging.","resolution":"Information log, no resolution required."},{"function":"ssl_dyn_destroy_function","message_template":"Destroying dynamic lock %s:%d","reason":"Trace log indicating a dynamic lock is being destroyed during cleanup. Includes file and line information for debugging.","resolution":"Information log, no resolution required."},{"function":"ssl_dyn_destroy_function","message_template":"Failed to destroy mutex for dynamic lock %s:%d","reason":"Logs a failure to properly destroy a mutex during cleanup. This might indicate a resource leak or other synchronization issues in the server.","resolution":"This could indicate problems with the threading implementation. Check if other threads are still using the mutex. May require server restart or possibly a server patch if it's a recurring issue."},{"function":"ssl_util_thread_id_setup","message_template":"using builtin threadid callback for OpenSSL","reason":"Informational log indicating that the server is using the builtin threadid callback for OpenSSL thread safety.","resolution":"Information log, no resolution required."},{"function":"ssl_util_thread_id_setup","message_template":"using deprecated CRYPTO_set_id_callback for OpenSSL","reason":"Notice that the server is using a deprecated API for OpenSSL thread identification. This might cause issues in future versions.","resolution":"Consider upgrading to a newer version of Apache or OpenSSL that uses modern thread handling. This is a warning about future compatibility."},{"function":"ssl_util_thread_id_setup","message_template":"using dangerous CRYPTO_THREADID_set_callback for OpenSSL","reason":"Warning that the server is using a potentially dangerous API for thread identification that could cause problems during server restarts.","resolution":"This is a known issue in certain OpenSSL versions. Consider upgrading Apache or OpenSSL to versions that handle threading more safely."},{"function":"ssl_util_thread_id_setup","message_template":"OpenSSL's THREADID callback was already set to another address, and the server is probably going to crash. See bug #60947 for more details. You may need to recompile or upgrade either OpenSSL or httpd.","reason":"Critical error indicating a conflict with another module that has already set the OpenSSL thread ID callback. This typically happens when multiple modules try to initialize OpenSSL threading.","resolution":"This is a serious issue that will likely cause a server crash. Check Apache bug #60947 for details. You may need to recompile or upgrade either OpenSSL or httpd, or remove conflicting modules that also initialize OpenSSL."}],"project":"apache\/httpd"}