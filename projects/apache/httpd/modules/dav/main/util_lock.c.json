{"module":"mod_dav_lock.c","summary":"This module implements repository-independent lock functions for the Apache WebDAV module. It handles lock creation, querying, inheritance, and removal operations, as well as the generation of XML lock discovery responses compliant with the WebDAV protocol.","logs":[{"function":"dav_get_resource_state","message_template":"Failed to query lock-null status for %s","reason":"This error occurs when the function fails to determine if a resource is a lock-null resource. The lookup of lock information in the lock database failed for some reason.","resolution":"Check that the lock database is accessible and functioning correctly. This might indicate permissions issues, database corruption, or lock provider implementation problems."},{"function":"dav_lock_get_activelock","message_template":"DESIGN ERROR: attempted to product an activelock element from a partial, indirect lock record. Creating an XML parsing error to ease detection of this situation: <","reason":"This debug message is triggered when there's an internal design error in the code attempting to create an activelock XML element from an incomplete lock record.","resolution":"This is a developer-level issue that indicates a bug in the DAV lock implementation. It should be reported to the Apache development team if encountered."},{"function":"dav_lock_parse_lockinfo","message_template":"The request body contains an unexpected XML root element.","reason":"This error occurs when the XML document in the request body does not have 'lockinfo' as its root element, which is required for lock operations.","resolution":"The client should be using a properly formatted WebDAV lock request with the correct XML structure. This is typically a client-side error."},{"function":"dav_lock_parse_lockinfo","message_template":"Could not parse the lockinfo due to an internal problem creating a lock structure.","reason":"The function failed to create a lock structure, likely due to a problem in the lock provider implementation.","resolution":"Check the lock provider configuration and ensure it's properly implemented. This may indicate server-side resource limitations or configuration problems."},{"function":"dav_lock_parse_lockinfo","message_template":"An invalid Depth header was specified.","reason":"The client specified an invalid value for the Depth header in the lock request.","resolution":"The client should use a valid Depth header value, either '0' or 'infinity' for WebDAV lock operations."},{"function":"dav_lock_parse_lockinfo","message_template":"The server cannot satisfy the LOCK request due to an unknown XML element (\"%s\") within the DAV:lockinfo element.","reason":"The lock request contains an unknown or invalid XML element within the lockinfo element.","resolution":"The client should follow the WebDAV specification (RFC 4918) for lock requests, using only the standard elements within the lockinfo element."},{"function":"dav_add_lock","message_template":"Error(s) occurred on resources during the addition of a depth lock.","reason":"When applying a depth lock to a collection, some resources within the collection could not be locked.","resolution":"Check individual resource errors from the multistatus response. Some resources might already be locked by another user, have permission issues, or not exist."},{"function":"dav_get_direct_resource","message_template":"The specified locktoken does not correspond to an existing lock on this resource.","reason":"The client provided a lock token that doesn't match any lock on the requested resource.","resolution":"The client should verify the lock token is correct and still valid. The lock might have expired or been removed by another operation."},{"function":"dav_get_direct_resource","message_template":"The lock database is corrupt. A direct lock could not be found for the corresponding indirect lock on this resource.","reason":"An inconsistency was found in the lock database where an indirect lock exists but its corresponding direct lock is missing.","resolution":"This indicates serious lock database corruption. The lock database may need to be reset or rebuilt. Consider checking for filesystem or database corruption."},{"function":"dav_inherit_locks","message_template":"Could not fetch parent resource. Unable to inherit locks from the parent and apply them to this resource.","reason":"The system failed to retrieve the parent resource, preventing inherited locks from being applied to a new resource.","resolution":"Check that the parent resource exists and is accessible. This could indicate filesystem permissions issues or problems with the repository implementation."},{"function":"dav_notify_created","message_template":"The resource was created successfully, but there was a problem inheriting locks from the parent resource.","reason":"A new resource was created, but the server couldn't properly inherit locks from its parent resource.","resolution":"The resource is created but may not have the expected lock state. Check lock database connectivity and the parent resource's lock status. This might require manual intervention to correct the lock state."}],"project":"apache\/httpd"}