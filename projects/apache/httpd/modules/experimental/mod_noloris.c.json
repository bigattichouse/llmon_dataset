{"module":"mod_noloris.c","summary":"An Apache module that protects against Slowloris\/slow HTTP DoS attacks by monitoring and banning IPs with too many connections in READ state. It provides configurable thresholds and trusted proxy exemptions to prevent resource exhaustion attacks.","logs":[{"function":"noloris_conn","message_template":"Dropping connection from banned IP %s","reason":"A connection attempt was made from an IP address that was previously banned for having too many connections in READ state. Likely due to the IP being involved in a Slowloris\/slow HTTP DoS attack.","resolution":"Investigate the IP address to determine if it's a legitimate attacker or a false positive. If it's a legitimate client, consider adding it to TrustedProxy directive or increase MaxClientConnections if appropriate."},{"function":"noloris_monitor","message_template":"noloris: banning %s with %d connections in READ state","reason":"The module has detected an IP with too many connections in READ state (exceeding MaxClientConnections), indicating a potential Slowloris attack, and has banned the IP.","resolution":"If this is a false positive for a legitimate high-traffic client or proxy, add the IP to TrustedProxy directive. Otherwise, consider if the MaxClientConnections threshold needs adjustment based on your typical traffic patterns."},{"function":"noloris_post","message_template":"Failed to create shm segment; mod_noloris disabled","reason":"The module failed to create the shared memory segment required for operation, likely due to system resource limitations, and has disabled itself.","resolution":"Check system memory resources and Apache configuration. Ensure the server has sufficient memory available for shared segments. You may need to adjust kernel parameters related to shared memory (like shmmax, shmall on Linux) or reduce the memory requirements by lowering server_limit and thread_limit in Apache configuration."}],"project":"apache\/httpd"}