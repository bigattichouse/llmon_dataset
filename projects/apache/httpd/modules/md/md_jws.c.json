{"module":"md_jws.c","summary":"A module providing JSON Web Signature (JWS) functionality for creating and signing JWTs with RSA and HMAC algorithms. It handles creation of JWKs, signing with private keys, generating thumbprints, and HMAC-based signatures.","logs":[{"function":"md_jws_sign","message_template":"get jwk","reason":"Logs a warning when retrieving the JSON Web Key (JWK) fails. This typically occurs when there's an issue with the provided private key or when converting the key to the JWK format.","resolution":"Verify that the private key is valid and properly formatted. Check if the key has valid RSA parameters and that it's properly initialized in memory."},{"function":"md_jws_sign","message_template":"serialize protected","reason":"Logs a warning when the protected header JSON cannot be serialized. This can happen if the JSON structure is invalid or contains incompatible values.","resolution":"Check the structure of the protected header fields and ensure they follow the JWS specification. Verify that all required fields are present and have valid values."},{"function":"md_jws_sign","message_template":"jwk signed message","reason":"Logs a warning when the signing operation fails. This typically occurs due to issues with the private key or the signature algorithm.","resolution":"Ensure the private key is valid and compatible with the RS256 algorithm. Check that the crypto library is properly initialized and that the key has sufficient permissions for the signing operation."},{"function":"md_jws_hmac","message_template":"serialize protected","reason":"Logs a warning when the protected header JSON cannot be serialized in an HMAC signing context. This can happen if the JSON structure is invalid or contains incompatible values.","resolution":"Check the structure of the protected header fields for the HMAC operation and ensure they follow the JWS specification. Verify that all required fields are present and have valid values for HS256 algorithm."}],"project":"apache\/httpd"}