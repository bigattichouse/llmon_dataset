{"module":"md_curl.c","summary":"This module implements HTTP functionality for Apache using the curl library. It provides mechanisms for making HTTP requests, handling responses, managing connections, and supports both single and multi-request processing with various timeout controls and debugging capabilities.","logs":[{"function":"curl_debug_log","message_template":"req[%d]: info %s","reason":"Logs general information about the HTTP request at trace level 4. This helps with debugging request execution details.","resolution":"Informational log, no resolution required. Useful for debugging HTTP request issues."},{"function":"curl_debug_log","message_template":"req[%d]: header --> %s","reason":"Logs outgoing HTTP headers at trace level 4. This helps with debugging what's being sent to the server.","resolution":"Informational log, no resolution required. Can be used to verify correct headers are being sent."},{"function":"curl_debug_log","message_template":"req[%d]: header <-- %s","reason":"Logs incoming HTTP headers at trace level 4. This helps with debugging what's being received from the server.","resolution":"Informational log, no resolution required. Useful for verifying server responses."},{"function":"curl_debug_log","message_template":"req[%d]: data --> %ld bytes","reason":"Logs the size of outgoing request data at trace level 4. This helps track data volume being sent.","resolution":"Informational log, no resolution required. If large data sizes cause issues, consider optimizing request payloads."},{"function":"curl_debug_log","message_template":"req[%d]: data(hex) -->  %s","reason":"Logs the hexadecimal representation of outgoing data at trace level 5. This is for detailed inspection of request payloads.","resolution":"Informational log, no resolution required. Used for advanced debugging of binary data."},{"function":"curl_debug_log","message_template":"req[%d]: data <-- %ld bytes","reason":"Logs the size of incoming response data at trace level 4. This helps track data volume being received.","resolution":"Informational log, no resolution required. If responses are unexpectedly large or small, may indicate server issues."},{"function":"curl_debug_log","message_template":"req[%d]: data(hex) <-- %s","reason":"Logs the hexadecimal representation of incoming data at trace level 5. This is for detailed inspection of response payloads.","resolution":"Informational log, no resolution required. Used for advanced debugging of binary data."},{"function":"internals_setup","message_template":"creating curl instance","reason":"Logs the creation of a new curl instance at trace level 3. Indicates first-time initialization for a request.","resolution":"Informational log, no resolution required. If seen too frequently, consider tuning connection pooling."},{"function":"internals_setup","message_template":"reusing curl instance from http","reason":"Logs the reuse of an existing curl instance at trace level 3. Indicates connection pooling is working.","resolution":"Informational log, no resolution required. This is a sign of efficient resource usage."},{"function":"internals_setup","message_template":"req[%d]: %s %s","reason":"Logs the HTTP method and URL of a request at trace level 3. This provides basic request information for debugging.","resolution":"Informational log, no resolution required. Useful for tracking request patterns."},{"function":"update_status","message_template":"req[%d]: http status is %d","reason":"Logs the HTTP status code of a response at trace level 3. This helps track successful or failed responses.","resolution":"Informational log, no resolution required. Non-2xx status codes may indicate server-side issues that need investigation."},{"function":"fire_status","message_template":"req[%d] fire callbacks","reason":"Logs when request callbacks are fired at trace level 3. This indicates that the response processing has begun.","resolution":"Informational log, no resolution required. If callbacks are not executing as expected, check error handling logic."},{"function":"md_curl_perform","message_template":"request failed(%d): %s","reason":"Logs when a request fails with a curl error code at debug level. This indicates a network, connection, or protocol error.","resolution":"Check network connectivity, server availability, and correct request formatting. Common issues include DNS failures, connection timeouts, or invalid certificates."},{"function":"md_curl_perform","message_template":"request <-- %d","reason":"Logs the HTTP status code of a completed request at trace level 1. This is a summary of the response outcome.","resolution":"Informational log, no resolution required. Non-2xx status codes may indicate issues that need to be addressed at the application level."},{"function":"md_curl_multi_perform","message_template":"multi_perform[%d reqs]: setup failed","reason":"Logs when setup for a multi-perform operation fails at error level. This can occur when resources cannot be allocated.","resolution":"Check system resources (memory), configuration parameters, and ensure the module is properly initialized. May indicate system overload."},{"function":"md_curl_multi_perform","message_template":"multi_perform[%d reqs]: no more requests","reason":"Logs when there are no more requests to process at trace level 3. This is normal completion of a batch.","resolution":"Informational log, no resolution required. If seen prematurely, check request generation logic."},{"function":"md_curl_multi_perform","message_template":"multi_perform[%d reqs]: nextreq() failed","reason":"Logs when retrieving the next request fails at trace level 3. This indicates an issue with request generation.","resolution":"Check the request generation callback for errors, ensure proper resource allocation, and verify that request parameters are valid."},{"function":"md_curl_multi_perform","message_template":"multi_perform[%d reqs]: added request","reason":"Logs when a request is added to the multi-handle at trace level 3. This confirms request scheduling.","resolution":"Informational log, no resolution required. Useful for tracking request batching."},{"function":"md_curl_multi_perform","message_template":"multi_perform[%d reqs] failed(%d): %s","reason":"Logs when a multi-perform operation fails with a curl error at debug level. This indicates a serious curl multi-interface error.","resolution":"Check for resource exhaustion, connection limits, or system issues. This may indicate too many simultaneous connections or system overload."},{"function":"md_curl_multi_perform","message_template":"multi_perform[%d reqs]: slowdown %d","reason":"Logs when connections are experiencing delays at trace level 3. This indicates network congestion or server slowness.","resolution":"If seen frequently, consider increasing timeouts, checking network quality, or investigating server performance issues. May require bandwidth or server capacity adjustments."},{"function":"md_curl_multi_perform","message_template":"multi_perform[%d reqs]: req[%d] done","reason":"Logs when a request in a multi-perform batch completes at trace level 2. This tracks individual request completion.","resolution":"Informational log, no resolution required. Useful for tracking request completion in batches."},{"function":"md_curl_multi_perform","message_template":"multi_perform[%d reqs]: req done, but not found by handle","reason":"Logs when a completed request cannot be found by its handle at debug level. This indicates a potential internal tracking issue.","resolution":"This may indicate a bug in the request tracking logic. If seen frequently, report as a potential bug in the module implementation."},{"function":"md_curl_multi_perform","message_template":"multi_perform[%d reqs]: leaving","reason":"Logs when a multi-perform operation completes at trace level 3. This marks the end of a batch processing cycle.","resolution":"Informational log, no resolution required. If the operation completes with remaining requests, check error handling logic."},{"function":"md_curl_req_cleanup","message_template":"register curl instance at http","reason":"Logs when a curl instance is registered with the HTTP context at trace level 3. This relates to connection management.","resolution":"Informational log, no resolution required. Part of normal resource management."},{"function":"md_curl_cleanup","message_template":"cleanup curl instance","reason":"Logs when a curl instance is being cleaned up at trace level 3. This relates to resource cleanup during shutdown or reset.","resolution":"Informational log, no resolution required. Part of normal resource cleanup process."}],"project":"apache\/httpd"}