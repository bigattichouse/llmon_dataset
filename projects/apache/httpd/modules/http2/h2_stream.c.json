{"module":"h2_stream.c","summary":"HTTP\/2 stream implementation handling stream states, frame processing, request\/response lifecycle, and error conditions. It manages stream state transitions according to the HTTP\/2 protocol specification and handles data flow between client and server.","logs":[{"function":"h2_stream_state_str","message_template":"IDLE","reason":"Returns string representation of stream state H2_SS_IDLE","resolution":"Informational log, no resolution required"},{"function":"h2_stream_state_str","message_template":"RESERVED_LOCAL","reason":"Returns string representation of stream state H2_SS_RSVD_L","resolution":"Informational log, no resolution required"},{"function":"h2_stream_state_str","message_template":"RESERVED_REMOTE","reason":"Returns string representation of stream state H2_SS_RSVD_R","resolution":"Informational log, no resolution required"},{"function":"h2_stream_state_str","message_template":"OPEN","reason":"Returns string representation of stream state H2_SS_OPEN","resolution":"Informational log, no resolution required"},{"function":"h2_stream_state_str","message_template":"HALF_CLOSED_LOCAL","reason":"Returns string representation of stream state H2_SS_CLOSED_L","resolution":"Informational log, no resolution required"},{"function":"h2_stream_state_str","message_template":"HALF_CLOSED_REMOTE","reason":"Returns string representation of stream state H2_SS_CLOSED_R","resolution":"Informational log, no resolution required"},{"function":"h2_stream_state_str","message_template":"CLOSED","reason":"Returns string representation of stream state H2_SS_CLOSED","resolution":"Informational log, no resolution required"},{"function":"h2_stream_state_str","message_template":"CLEANUP","reason":"Returns string representation of stream state H2_SS_CLEANUP","resolution":"Informational log, no resolution required"},{"function":"h2_stream_state_str","message_template":"UNKNOWN","reason":"Returns string representation of an unrecognized stream state","resolution":"This indicates an invalid state value, check for memory corruption or software bugs"},{"function":"H2_STREAM_OUT_LOG","message_template":"out-buffer(%s)","reason":"Logs the contents of the stream's output buffer with a specific tag","resolution":"Informational log for debugging, no resolution required"},{"function":"H2_STREAM_OUT_LOG","message_template":"empty","reason":"Indicates the output buffer is empty","resolution":"Informational log, no resolution required"},{"function":"stream_setup_input","message_template":"setup input beam","reason":"Setting up the input beam for the stream to receive data","resolution":"Informational log, no resolution required"},{"function":"input_flush","message_template":"flush input","reason":"Flushing buffered input data to the stream's input beam","resolution":"Informational log, no resolution required"},{"function":"input_flush","message_template":"send input error","reason":"Error occurred while sending data to the input beam","resolution":"Check for connection issues or memory problems"},{"function":"close_input","message_template":"closing input","reason":"Stream is closing its input side","resolution":"Informational log, no resolution required"},{"function":"close_input","message_template":"adding trailers","reason":"Adding HTTP trailers to the input before closing","resolution":"Informational log, no resolution required"},{"function":"close_input","message_template":"input flush + EOS","reason":"Final flush of input with end-of-stream marker","resolution":"Informational log, no resolution required"},{"function":"on_state_invalid","message_template":"invalid state event","reason":"Stream received an event that is invalid for its current state","resolution":"This indicates a protocol error, check client implementation or possible bugs in HTTP\/2 handling"},{"function":"transit","message_template":"invalid transition","reason":"Attempted to transition stream to an invalid state","resolution":"This indicates a protocol error or software bug, verify HTTP\/2 stream state handling"},{"function":"transit","message_template":"transit to [%s]","reason":"Stream is transitioning to a new state","resolution":"Informational log, no resolution required"},{"function":"h2_stream_dispatch","message_template":"dispatch event %d","reason":"Stream is processing a dispatched event","resolution":"Informational log, no resolution required"},{"function":"h2_stream_dispatch","message_template":"invalid event %d","reason":"Stream received an invalid event","resolution":"Check for protocol errors or bugs in event handling"},{"function":"h2_stream_dispatch","message_template":"non-state event %d","reason":"Stream received an event that doesn't change its state","resolution":"Informational log, no resolution required"},{"function":"h2_stream_send_frame","message_template":"invalid frame %d send","reason":"Attempted to send a frame type that is invalid for the current stream state","resolution":"This indicates a protocol error, check HTTP\/2 state machine implementation"},{"function":"h2_stream_recv_frame","message_template":"invalid frame %d recv","reason":"Received a frame type that is invalid for the current stream state","resolution":"This indicates a protocol error from the client, possible attack or buggy client implementation"},{"function":"h2_stream_recv_DATA","message_template":"recv DATA, len=%d: -->%s<--","reason":"Received DATA frame with the shown payload (debug mode)","resolution":"Informational log, no resolution required"},{"function":"h2_stream_recv_DATA","message_template":"recv DATA, len=%d","reason":"Received DATA frame of the specified length","resolution":"Informational log, no resolution required"},{"function":"stream_pool_destroy","message_template":"was not destroyed explicitly","reason":"Stream memory pool is being destroyed without explicit stream destruction","resolution":"Fix memory management to properly destroy streams before their memory pools"},{"function":"stream_pool_destroy","message_template":"already pool destroyed","reason":"Stream pool is being destroyed multiple times","resolution":"Fix memory management to avoid double destruction of stream pools"},{"function":"h2_stream_create","message_template":"created","reason":"A new HTTP\/2 stream has been created","resolution":"Informational log, no resolution required"},{"function":"h2_stream_destroy","message_template":"destroy","reason":"HTTP\/2 stream is being destroyed","resolution":"Informational log, no resolution required"},{"function":"h2_stream_rst","message_template":"reset, error=%d","reason":"Stream is being reset with the specified error code","resolution":"Check the error code to understand why the stream was reset and if action is needed"},{"function":"h2_stream_set_request_rec","message_template":"set_request_rec %s host=%s:\/\/%s%s","reason":"Setting request record details for the stream","resolution":"Informational log, no resolution required"},{"function":"add_trailer","message_template":"pseudo header in trailer","reason":"Attempted to add a pseudo-header (starts with ':') as a trailer, which is invalid","resolution":"Check client implementation as it's sending invalid trailers"},{"function":"add_trailer","message_template":"added trailer '%s: %s'","reason":"Added HTTP trailer header to the stream","resolution":"Informational log, no resolution required"},{"function":"h2_stream_add_header","message_template":"Request pseudo header exceeds LimitRequestFieldSize: %s","reason":"A pseudo header value exceeds the configured size limit","resolution":"Check client implementation or increase LimitRequestFieldSize if needed"},{"function":"h2_stream_add_header","message_template":"add_header: '%.*s: %.*s","reason":"Adding a header to the request","resolution":"Informational log, no resolution required"},{"function":"h2_stream_add_header","message_template":"Request header exceeds LimitRequestFieldSize: %.*s","reason":"A header value exceeds the configured size limit","resolution":"Check client implementation or increase LimitRequestFieldSize if needed"},{"function":"h2_stream_add_header","message_template":"Number of request headers exceeds LimitRequestFields","reason":"The request contains too many headers","resolution":"Check client implementation or increase LimitRequestFields if needed"},{"function":"h2_stream_add_header","message_template":"header %s not accepted","reason":"A header was rejected for some reason","resolution":"Check for invalid headers or exceeded limits"},{"function":"h2_stream_end_headers","message_template":"Request header exceeds LimitRequestFieldSize: %.*s","reason":"A header value exceeds the configured size limit during final validation","resolution":"Check client implementation or increase LimitRequestFieldSize if needed"},{"function":"h2_stream_end_headers","message_template":"Request to websocket CONNECT without :scheme or :path, sending 400 answer","reason":"Websocket CONNECT request missing required pseudo-headers","resolution":"Client needs to provide proper :scheme and :path headers for websocket CONNECT"},{"function":"h2_stream_end_headers","message_template":"':protocol: %s' header present in %s request","reason":"Protocol header present in a request but not supported","resolution":"This protocol is not implemented, client should use a supported protocol"},{"function":"h2_stream_end_headers","message_template":"Request to CONNECT with :scheme or :path specified, sending 400 answer","reason":"CONNECT request improperly includes :scheme or :path headers","resolution":"Client should follow HTTP\/2 spec for CONNECT requests"},{"function":"h2_stream_end_headers","message_template":"Request for http(s) resource without :path, sending 400 answer","reason":"HTTP\/HTTPS request missing required :path pseudo-header","resolution":"Client should include :path in all HTTP\/HTTPS requests"},{"function":"h2_stream_end_headers","message_template":"Request :scheme '%s' and path '%s' do not allow creating an absolute URL. Failing request with 400.","reason":"The combination of scheme and path values doesn't form a valid URL","resolution":"Client should fix the path to start with '\/' or use a different scheme"},{"function":"h2_stream_end_headers","message_template":"headers received from client:","reason":"Logging all headers received from client (debug level)","resolution":"Informational log, no resolution required"},{"function":"h2_stream_end_headers","message_template":"  %s: %s","reason":"Individual header entry from client (debug level)","resolution":"Informational log, no resolution required"},{"function":"stream_do_error_bucket","message_template":"error bucket received, err=%d","reason":"An error bucket was encountered in the stream's output","resolution":"Check for errors in request processing that generated this error"},{"function":"buffer_output_receive","message_template":"out_buffer, already has %ld length","reason":"Output buffer already contains significant data","resolution":"Informational log, no resolution required"},{"function":"buffer_output_receive","message_template":"out_buffer, receive unsuccessful","reason":"Failed to receive data into output buffer","resolution":"Check for connection issues or memory problems"},{"function":"buffer_output_receive","message_template":"out_buffer, after receive","reason":"Status after receiving data into output buffer","resolution":"Informational log, no resolution required"},{"function":"stream_do_trailers","message_template":"process trailers","reason":"Processing HTTP trailers for the stream","resolution":"Informational log, no resolution required"},{"function":"stream_do_trailers","message_template":"submit %d trailers","reason":"Submitting trailers to be sent to client","resolution":"Informational log, no resolution required"},{"function":"stream_do_trailers","message_template":"invalid trailers","reason":"The trailers could not be processed due to invalid format","resolution":"Check the trailer format or encoding"},{"function":"stream_do_trailers","message_template":"submit_response: %s","reason":"Error submitting response with trailers","resolution":"Check the nghttp2 error message for details on the failure"},{"function":"h2_stream_submit_pushes","message_template":"found %d push candidates","reason":"Identified resources that can be pushed to the client","resolution":"Informational log, no resolution required"},{"function":"stream_do_response","message_template":"process response %d","reason":"Processing HTTP response with given status code","resolution":"Informational log, no resolution required"},{"function":"stream_do_response","message_template":"renegotiate forbidden, cause: %s","reason":"TLS renegotiation was attempted which is forbidden in HTTP\/2","resolution":"The client should use HTTP\/1.1 for this resource"},{"function":"stream_do_response","message_template":"submit response %d","reason":"Submitting HTTP response with given status code","resolution":"Informational log, no resolution required"},{"function":"stream_do_response","message_template":"submit pushes, note=%s","reason":"Submitting server push resources along with the response","resolution":"Informational log, no resolution required"},{"function":"stream_do_response","message_template":"invalid response","reason":"The response could not be converted to nghttp2 format","resolution":"Check response headers for invalid values or formats"},{"function":"stream_do_response","message_template":"submit_response: %s","reason":"Error from nghttp2 when submitting response","resolution":"Check the nghttp2 error message for details on the failure"},{"function":"stream_data_cb","message_template":"data_cb, stream not found","reason":"Stream not found when callback is invoked by nghttp2","resolution":"This indicates a problem with stream lifecycle management, check for premature stream destruction"},{"function":"stream_data_cb","message_template":"suspending on c1 out needs flush","reason":"Suspending output because the connection needs to be flushed first","resolution":"Informational log, no resolution required"},{"function":"stream_data_cb","message_template":"need more (read len=%ld, %ld in buffer)","reason":"Need to read more data from output source","resolution":"Informational log, no resolution required"},{"function":"stream_data_cb","message_template":"buffer_output_received","reason":"Received output from buffer","resolution":"Informational log, no resolution required"},{"function":"stream_data_cb","message_template":"rst stream","reason":"Resetting stream due to incomplete output","resolution":"Check for handler issues that might be terminating output prematurely"},{"function":"stream_data_cb","message_template":"eof on receive (read len=%ld, %ld in buffer)","reason":"Reached end of output source","resolution":"Informational log, no resolution required"},{"function":"stream_data_cb","message_template":"data_cb, reading data","reason":"Reading data from output source","resolution":"Informational log, no resolution required. If error, check connection state"},{"function":"stream_data_cb","message_template":"data_cb, error processing trailers","reason":"Error occurred while processing HTTP trailers","resolution":"Check trailer format and validity"},{"function":"stream_data_cb","message_template":"data_cb, sending len=%ld, eos=%d","reason":"Sending data chunk with optional end-of-stream flag","resolution":"Informational log, no resolution required"},{"function":"stream_data_cb","message_template":"data_cb, suspending","reason":"Suspending data sending temporarily","resolution":"Informational log, no resolution required"},{"function":"h2_stream_on_input_change","message_template":"consumed %ld bytes, window now %d\/%d","reason":"Flow control window update after consuming data","resolution":"Informational log, no resolution required"},{"function":"h2_stream_on_output_change","message_template":"read_output, no output beam registered","reason":"Cannot read output because no output beam is registered","resolution":"Check that c2 properly set up the output beam for the stream"},{"function":"h2_stream_on_output_change","message_template":"already closed","reason":"Cannot process output change because stream is already closed","resolution":"Informational log, no resolution required"},{"function":"h2_stream_on_output_change","message_template":"remote close missing","reason":"Client has not closed the stream that should be closed","resolution":"Check client implementation for protocol compliance"},{"function":"h2_stream_on_output_change","message_template":"resumed","reason":"Stream data processing is resumed","resolution":"Informational log, no resolution required"}],"project":"apache\/httpd"}