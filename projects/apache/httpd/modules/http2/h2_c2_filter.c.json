{"module":"h2_c2_filter.c","summary":"This module implements HTTP\/2 connection filtering for request\/response processing in Apache, handling chunked encoding, header transformation, and protocol adaptation between HTTP\/1.1 and HTTP\/2.","logs":[{"function":"h2_c2_filter_notes_out","message_template":"h2_c2_filter_notes_out, turning PUSH off","reason":"Logs when the H2 PUSH feature is disabled due to location configuration settings","resolution":"This is an informational log. If HTTP\/2 Server Push capability is desired, check the h2push configuration in your server or location directives."},{"function":"h2_c2_filter_request_in","message_template":"h2_c2_filter_request_in(%s): adding request bucket","reason":"Logs when a request bucket is being added to a new HTTP\/2 connection","resolution":"Information log, no resolution required"},{"function":"h2_c2_filter_request_in","message_template":"h2_c2_filter_request_in(%s): adding error bucket %d","reason":"Logs when an error occurred preparing an HTTP\/2 request","resolution":"Check the error code to determine the specific issue. This typically indicates a problem with the incoming request that needs to be addressed."},{"function":"get_line","message_template":"h2_c2(%s): read response line: %s","reason":"Logs response lines being read from the upstream server during HTTP response parsing","resolution":"Information log, no resolution required"},{"function":"get_line","message_template":"h2_c2(%s): read response, line too long","reason":"Indicates that a response header line exceeded the maximum allowed length","resolution":"Check the upstream server configuration. The response headers may be too large or malformed, which can happen with misconfigured servers or when headers contain excessive data."},{"function":"get_line","message_template":"h2_c2(%s): read response, incomplete line: %s","reason":"Logs when a partial response line is read and more data is expected","resolution":"Information log, no resolution required. If this appears frequently without complete lines following, it may indicate network issues or a misbehaving upstream server."},{"function":"parse_header","message_template":"h2_c2(%s): invalid header[%d] '%s'","reason":"Logs when an invalid header format is encountered during parsing","resolution":"Check the upstream server for compliance with HTTP header specifications. This typically occurs with malformed headers that are missing colons or have incorrect formatting."},{"function":"pass_response","message_template":"h2_c2(%s): passed response %d","reason":"Logs when an HTTP response has been successfully processed and passed to the next filter","resolution":"Information log, no resolution required"},{"function":"parse_status","message_template":"h2_c2(%s): unable to parse status line: %s","reason":"Failed to parse an HTTP status line during response processing","resolution":"Check if the upstream server is sending properly formatted HTTP responses. This could indicate a protocol mismatch or corrupted data in the response stream."},{"function":"parse_response","message_template":"h2_c2(%s): end of response","reason":"Logs when the end of a response has been reached during parsing","resolution":"Information log, no resolution required"},{"function":"parse_response","message_template":"h2_c2(%s): response header %s","reason":"Logs individual response headers during trace-level debugging","resolution":"Information log, no resolution required"},{"function":"H2_FILTER_LOG","message_template":"FILTER[%s]: %s %s","reason":"General filter debugging log message pattern used for tracing filter operations","resolution":"Information log, no resolution required. Used primarily for debugging filter operation."},{"function":"h2_c2_filter_catch_h1_out","message_template":"h2_c2(%s): parsed response","reason":"Logs when an HTTP\/1.1 response has been successfully parsed","resolution":"Information log, no resolution required"},{"function":"h2_c2_filter_response_out","message_template":"h2_c2(%s): eoc bucket passed","reason":"Logs when an End-Of-Connection bucket is passed to the output filter chain","resolution":"Information log, no resolution required"},{"function":"h2_c2_filter_response_out","message_template":"h2_c2(%s): err bucket status=%d","reason":"Logs when an error bucket is encountered during response processing","resolution":"Check the status code to determine the specific error. This typically requires examining the client request and server configuration to address the underlying issue."},{"function":"h2_c2_filter_response_out","message_template":"h2_c2(%s): unable to create response","reason":"Failed to create an HTTP response bucket, typically due to resource issues","resolution":"Check server resources (memory) and configuration. This error can occur under heavy load or when the server is running out of memory."},{"function":"h2_c2_filter_response_out","message_template":"h2_c2(%s): headers only, cleanup output brigade","reason":"Logs when cleaning up the output brigade for a headers-only response","resolution":"Information log, no resolution required"},{"function":"make_chunk","message_template":"h2_c2(%s): added chunk %ld, total %ld","reason":"Logs when a chunk is added to the response during chunked transfer encoding","resolution":"Information log, no resolution required"},{"function":"read_and_chunk","message_template":"h2_c2(%s-%d): receiving trailers","reason":"Logs when HTTP trailers are being received and processed","resolution":"Information log, no resolution required"},{"function":"read_and_chunk","message_template":"h2_c2(%s-%d): receiving eos","reason":"Logs when an End-Of-Stream marker is received during response processing","resolution":"Information log, no resolution required"},{"function":"h2_c2_filter_request_in","message_template":"h2_c2(%s-%d): request input, mode=%d, block=%d, readbytes=%ld, exp=%d","reason":"Logs details about the input filter request parameters for debugging","resolution":"Information log, no resolution required"},{"function":"h2_c2_filter_request_in","message_template":"h2_c2, unsupported READ mode %d","reason":"Logs when an unsupported read mode is requested in the input filter","resolution":"This indicates a programming error or incompatible module. Check which modules are enabled and ensure they're compatible with the HTTP\/2 module."},{"function":"h2_c2_filter_request_in","message_template":"h2_c2(%s-%d): getline: %s","reason":"Debug log showing the line read during request processing","resolution":"Information log, no resolution required"},{"function":"h2_c2_filter_trailers_out","message_template":"h2_c2(%s-%d): sending trailers","reason":"Logs when HTTP trailers are being sent in the response","resolution":"Information log, no resolution required"},{"function":"h2_c2_filter_request_in","message_template":"returning input","reason":"Debug log indicating the input is being returned","resolution":"Information log, no resolution required"},{"function":"handling_ssl_renegotiate","message_template":"ssl-renegotiate-forbidden","reason":"Indicates that an SSL renegotiation was attempted but is forbidden","resolution":"This typically occurs when a client attempts to renegotiate an SSL connection which is not allowed in HTTP\/2. Check client configuration or use an HTTP\/1.1 connection if renegotiation is necessary."}],"project":"apache\/httpd"}