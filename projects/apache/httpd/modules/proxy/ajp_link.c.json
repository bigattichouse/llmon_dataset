{"module":"ajp.c","summary":"This module implements the Apache JServ Protocol (AJP) handling for Apache's proxy module, providing functions to send and receive AJP messages between Apache and backend servers such as Tomcat. It encapsulates the socket-level communication and protocol-specific details of AJP.","logs":[{"function":"ajp_ilink_send","message_template":"ajp_ilink_send(): send failed","reason":"Logs an error when sending data to the backend AJP server fails. Likely due to network connectivity issues, the backend server being unavailable, or socket closure.","resolution":"Check network connectivity between Apache and the backend server. Verify the backend server is running and accepting connections. Examine firewall rules that might block communication. Check the backend server logs for any connection refusals or errors."},{"function":"ajp_ilink_receive","message_template":"ajp_ilink_receive() can't receive header","reason":"Logs an error when unable to receive the AJP message header from the backend server. This could occur due to timeouts, network issues, or if the backend server closed the connection unexpectedly.","resolution":"Increase timeout values in the proxy configuration. Check network connectivity and stability. Verify the backend server is functioning properly and not terminating connections prematurely. Examine backend server logs for errors."},{"function":"ajp_ilink_receive","message_template":"ajp_ilink_receive() received bad header","reason":"Logs an error when the received AJP message header is malformed or doesn't conform to the AJP protocol specifications. May indicate incompatibility between Apache and the backend server.","resolution":"Ensure the backend server supports the same AJP protocol version as Apache. Update either Apache or the backend server to compatible versions. Check for any custom modifications to the protocol implementation on either side."},{"function":"ajp_ilink_receive","message_template":"ajp_ilink_receive() error while receiving message body of length %","reason":"Logs an error when unable to receive the complete message body after successfully receiving the header. This might occur if the connection is interrupted during data transfer.","resolution":"Check for network instability or packet loss. Increase socket timeout settings. Verify the backend server isn't terminating connections prematurely. Consider adjusting buffer sizes if handling large responses."},{"function":"ajp_ilink_receive","message_template":"ajp_ilink_receive() received packet len=%type=%d","reason":"Debug log that indicates successful reception of an AJP packet, showing the packet length and type. Used for troubleshooting and monitoring AJP communication.","resolution":"Informational log, no resolution required. Can be used to verify correct communication patterns between Apache and the backend server when debugging protocol issues."}],"project":"apache\/httpd"}