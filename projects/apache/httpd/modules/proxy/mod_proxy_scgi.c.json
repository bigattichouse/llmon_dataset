{"module":"mod_proxy_scgi.c","summary":"This module implements an SCGI protocol backend for Apache's mod_proxy system, handling the proxying of requests to SCGI servers with special support for X-Sendfile and internal redirects. It manages both the request forwarding and response processing, including handling of special headers for file serving and internal redirection.","logs":[{"function":"scgi_canon","message_template":"error parsing URL %s: %s","reason":"Logs an error when the SCGI URL cannot be properly parsed. This typically happens when the URL format is incorrect or contains invalid characters.","resolution":"Check the SCGI URL format in your configuration. Ensure it follows the correct syntax: scgi:\/\/hostname[:port]\/path."},{"function":"sendall","message_template":"sending data to %s:%u failed","reason":"Logs an error when the module fails to send data to the SCGI backend. This could be due to network issues, backend server being down, or timeout.","resolution":"Verify the SCGI backend server is running and accessible. Check network connectivity and firewall rules. Examine backend server logs for more details."},{"function":"send_request_body","message_template":"receiving request body failed","reason":"Logs an error when the module fails to receive the complete request body from the client. This might happen if the client disconnects prematurely or if there are network issues.","resolution":"Check client connectivity and ensure clients aren't terminating connections prematurely. May require increasing timeout values if large request bodies are expected."},{"function":"pass_response","message_template":"error reading response headers from %s:%u","reason":"Logs an error when the module cannot read response headers from the SCGI backend. This typically happens when the backend crashes or disconnects while generating a response.","resolution":"Investigate the SCGI backend server for errors or crashes. Check backend server logs and ensure it's configured correctly to handle the request volume."},{"function":"pass_response","message_template":"Found %s: %s - preparing subrequest.","reason":"Debug log that indicates the module found a sendfile header in the response and is preparing to handle it as a subrequest.","resolution":"Informational log, no resolution required. If unexpected, verify the SCGI application is correctly setting the X-Sendfile header."},{"function":"scgi_request_status","message_template":"Internal redirect to %s","reason":"Debug log that indicates the module is performing an internal redirect to the specified location, based on response headers from the SCGI backend.","resolution":"Informational log, no resolution required. If redirects are unexpected, check the SCGI application to see why it's sending redirect headers."},{"function":"scgi_request_status","message_template":"File subrequest to %s","reason":"Debug log that indicates the module is initiating a file subrequest to serve a static file, based on response headers from the SCGI backend.","resolution":"Informational log, no resolution required. If file subrequests are unexpected, verify the SCGI application is setting the X-Sendfile header correctly."},{"function":"scgi_request_status","message_template":"Subrequest to file '%s' not possible. (rr->status=%d, rr->finfo.filetype=%d)","reason":"Logs an error when a file subrequest fails, typically because the file doesn't exist or is not accessible.","resolution":"Verify the file path returned by the SCGI application is correct and accessible to the Apache server process. Check file permissions and ensure the path is valid relative to the server root."},{"function":"scgi_handler","message_template":"declining URL %s","reason":"Debug log that indicates the module is declining to handle a URL because it doesn't match the SCGI scheme format.","resolution":"Informational log, no resolution required. This is normal for URLs not meant to be handled by the SCGI module."},{"function":"scgi_handler","message_template":"failed to make connection to backend: %s:%u","reason":"Logs an error when the module fails to connect to the SCGI backend server. This typically happens if the backend is down or unreachable.","resolution":"Verify the SCGI backend server is running and accessible. Check network connectivity, firewall rules, and that the configured hostname and port are correct."}],"project":"apache\/httpd"}