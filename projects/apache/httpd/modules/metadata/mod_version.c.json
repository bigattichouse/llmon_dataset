{"module":"mod_version.c","summary":"An Apache module that allows conditional configuration directives based on the httpd version. It enables administrators to specify different configurations for different versions of Apache using <IfVersion> tags with comparison operators like =, >, >=, <, <= and regex matching.","logs":[{"function":"compare_version","message_template":"Version appears to be invalid. It must have the format major[.minor[.patch]] where major, minor and patch are numbers.","reason":"This error occurs when the version string provided in the <IfVersion> directive doesn't match the expected format of major[.minor[.patch]]. Likely caused by a typo or using non-numeric characters in the version specification.","resolution":"Check the version format in your configuration file and ensure it follows the required pattern of major[.minor[.patch]] where all components are numeric. For example, use '2.4.0' instead of '2.4-dev' or similar non-standard formats."},{"function":"match_version","message_template":"Unable to compile regular expression","reason":"This error occurs when the regular expression provided in the <IfVersion> directive is invalid or malformed and cannot be compiled. This can happen when using incorrect regex syntax or patterns.","resolution":"Review the regular expression in your <IfVersion> directive for syntax errors. Make sure all special characters are properly escaped and pattern elements are correctly formed. Consider testing the regex in a separate tool before using it in your Apache configuration."},{"function":"start_ifversion","message_template":"> directive missing closing '>'","reason":"This error occurs when the <IfVersion> directive is missing its closing bracket. Apache requires properly formatted XML-like tags for its directives.","resolution":"Check your configuration file for incomplete <IfVersion> tags and ensure each opening tag has a corresponding closing bracket. The correct format is '<IfVersion op version>'."},{"function":"start_ifversion","message_template":"Missing delimiting \/ of regular expression.","reason":"This error happens when using a regular expression in <IfVersion> with the = operator but the regex is not properly delimited with forward slashes.","resolution":"Enclose your regular expression in forward slashes when using the = operator in <IfVersion>. For example, use '<IfVersion = \/2\\.4\\..*\/>' instead of '<IfVersion = 2\\.4\\.*>'."},{"function":"start_ifversion","message_template":"unrecognized operator '[operator]'","reason":"This error occurs when an invalid comparison operator is used in the <IfVersion> directive. Only =, ==, >, >=, <, <=, and ~ are supported operators.","resolution":"Change the operator in your <IfVersion> directive to one of the supported operators: =, ==, >, >=, <, <=, or ~. You can also use ! before these operators to negate the comparison."}],"project":"apache\/httpd"}