{"project":"sendmail","module":"smndbm.c","summary":"This module implements the Sendmail Database (SMDB) API for NDBM databases, providing functions to open, close, read, write, and navigate database entries. It's part of the libsmdb library that abstracts database operations for the Sendmail mail transfer agent.","logs":[{"function":"smdb_ndbm_open","message_template":"SMDBE_MALLOC error when opening NDBM database","reason":"Memory allocation failure when trying to allocate a new database structure or cursor. This typically happens when the system is running low on memory.","resolution":"Check system memory usage and possibly increase available memory. Consider checking for memory leaks or reducing memory consumption in other parts of the application."},{"function":"smdb_ndbm_open","message_template":"SMDBE_UNKNOWN_DB_TYPE error when opening NDBM database","reason":"Attempted to open a database with an unknown or NULL database type. This indicates an application-level error in how the database is being accessed.","resolution":"Ensure that a valid database type is specified when opening the database. Check application code that calls this function."},{"function":"smdb_ndbm_open","message_template":"SMDBE_BAD_OPEN error when opening NDBM database","reason":"Failed to open the NDBM database with no specific error returned from the system. This could be due to permissions, filesystem issues, or database corruption.","resolution":"Check file permissions, ensure the filesystem has space available, and verify the database isn't corrupted. You may need to rebuild the database if corruption is suspected."},{"function":"smdb_ndbm_open","message_template":"SMDBE_GDBM_IS_BAD error when opening NDBM database","reason":"Detected GDBM (GNU Database Manager) which is not supported by this module. The code checks for GDBM by testing if directory and page file descriptors are identical.","resolution":"Use a different database backend or modify the configuration to use a supported NDBM implementation instead of GDBM."},{"function":"smdbm_get","message_template":"SMDBE_IO_ERROR during database read operation","reason":"I\/O error occurred while trying to read from the database. This could be due to filesystem issues or database corruption.","resolution":"Check the filesystem health, ensure sufficient disk space, and verify database integrity. May require database repair or recreation if corrupted."},{"function":"smdbm_put","message_template":"SMDBE_DUPLICATE when storing data","reason":"Attempted to insert a duplicate key when the SMDBF_NO_OVERWRITE flag is set. The database already contains an entry with the specified key.","resolution":"Modify application logic to handle duplicate keys, either by updating existing entries or using unique keys. This is an application-level issue rather than a system error."},{"function":"smdbm_cursor","message_template":"SMDBE_ONLY_SUPPORTS_ONE_CURSOR when creating cursor","reason":"Attempted to create a second cursor when one is already in use. This implementation only supports one active cursor at a time.","resolution":"Modify application code to close the existing cursor before opening a new one, or redesign to use only one cursor at a time."},{"function":"smdbm_cursor_get","message_template":"SMDBE_UNSUPPORTED for SMDB_CURSOR_GET_RANGE operation","reason":"The range search operation is not supported by the NDBM implementation. This is a limitation of the underlying database technology.","resolution":"Consider using a different database backend that supports range operations, or modify application logic to work without range queries."}]}