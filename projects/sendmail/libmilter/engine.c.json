{"project":"sendmail","module":"libmilter\/engine.c","summary":"Implements the Sendmail Milter engine that handles communication between the MTA (Mail Transfer Agent) and mail filtering applications. It manages protocol negotiation, state transitions, and command processing in the filter protocol.","logs":[{"function":"mi_engine","message_template":"[%lu] milter_abort\\n","reason":"Logged when the milter is being aborted due to an internal condition or external signal","resolution":"Check for abnormal termination conditions in the milter application or if sendmail forcefully terminated the connection"},{"function":"mi_engine","message_template":"[%lu] mi_engine: mi_rd_cmd error (%x)\\n","reason":"Indicates an error reading a command from the MTA","resolution":"Check network connectivity between MTA and milter, or for protocol corruption"},{"function":"mi_engine","message_template":"[%lu] got cmd '%c' len %d\\n","reason":"Debug information showing what command was received from the MTA","resolution":"Informational log, no resolution required"},{"function":"mi_engine","message_template":"[%lu] cmd '%c' unknown\\n","reason":"The MTA sent a command that the milter doesn't recognize","resolution":"Verify MTA and milter version compatibility; may indicate protocol version mismatch"},{"function":"mi_engine","message_template":"[%lu] cmd '%c' not impl\\n","reason":"The MTA sent a recognized command that isn't implemented by the milter","resolution":"Update milter library or application to implement the missing functionality"},{"function":"mi_engine","message_template":"[%lu] cur %x new %x nextmask %x\\n","reason":"Debug information showing state transition details","resolution":"Informational log, no resolution required"},{"function":"mi_engine","message_template":"[%lu] abort: cur %d (%x) new %d (%x) next %x\\n","reason":"Detailed info about a state transition that's causing an abort","resolution":"Check for correct command sequencing from MTA; may indicate protocol error or state machine problem"},{"function":"mi_engine","message_template":"[%lu] cmd='%c', buf=NULL\\n","reason":"A command was received that requires a buffer, but the buffer is NULL","resolution":"Check for memory allocation failures or MTA protocol errors"},{"function":"mi_engine","message_template":"[%lu] function returned abort\\n","reason":"A callback function in the milter application returned an abort status","resolution":"Examine milter application logic for the condition causing the abort"},{"function":"sendreply","message_template":"%s: milter claimed not to reply in state %d but did anyway %d","reason":"Protocol violation where a milter said it wouldn't reply in a certain state but sent a reply","resolution":"Fix the milter application to correctly honor the no-reply flags it set during negotiation"},{"function":"mi_clr_ctx","message_template":"%s: private data not NULL","reason":"When cleaning up context, private data wasn't properly freed by the milter","resolution":"Check milter application for memory leaks; ensure it properly frees private data in its close callback"},{"function":"st_optionneg","message_template":"%s: st_optionneg[%ld]: len too short %d < %d","reason":"Option negotiation data from MTA is too short to be valid","resolution":"Check for MTA protocol compliance or network transmission errors"},{"function":"st_optionneg","message_template":"%s: st_optionneg[%ld]: protocol version too old %d < %d","reason":"MTA is using a protocol version that's too old for this milter","resolution":"Upgrade sendmail MTA to a compatible version or configure milter to accept older protocol versions"},{"function":"st_optionneg","message_template":"%s: st_optionneg[%ld]: milter version=%X, trying flags=%X","reason":"Warning about potential flag compatibility issues with certain milter versions","resolution":"Update milter to a version that supports the protocol features being requested"},{"function":"st_optionneg","message_template":"%s: st_optionneg[%ld]: xxfi_negotiate returned %d (protocol options=0x%lx, actions=0x%lx)","reason":"The negotiate callback returned an unexpected value","resolution":"Check milter negotiate callback logic; ensure it returns appropriate values"},{"function":"st_optionneg","message_template":"%s: st_optionneg[%ld]: 0x%lx does not fulfill action requirements 0x%x","reason":"MTA capabilities don't meet the requirements of the milter","resolution":"Either upgrade MTA to support required actions or modify milter to work with available actions"},{"function":"st_optionneg","message_template":"%s: st_optionneg[%ld]: 0x%lx does not fulfill protocol requirements 0x%x","reason":"MTA protocol features don't meet the requirements of the milter","resolution":"Either upgrade MTA to support required protocol features or modify milter to work with available features"},{"function":"st_connectinfo","message_template":"%s: connect[%ld]: wrong len %d >= %d","reason":"Connection information data has incorrect length","resolution":"Check for protocol compliance in MTA or network transmission errors"},{"function":"st_connectinfo","message_template":"%s: connect[%ld]: inet_aton failed","reason":"Failed to convert IPv4 address string to binary form","resolution":"Verify MTA is sending valid IPv4 addresses in the correct format"},{"function":"st_connectinfo","message_template":"%s: connect[%ld]: mi_inet_pton failed","reason":"Failed to convert IPv6 address string to binary form","resolution":"Verify MTA is sending valid IPv6 addresses in the correct format"},{"function":"st_connectinfo","message_template":"%s: connect[%ld]: path too long","reason":"Unix socket path provided in connection info is too long","resolution":"Configure MTA to use shorter Unix socket paths or increase buffer size in milter"},{"function":"st_connectinfo","message_template":"%s: connect[%ld]: unknown family %d","reason":"Connection info contains an unknown address family identifier","resolution":"Check if MTA is using an address family not supported by the milter"},{"function":"mi_engine","message_template":"[%lu] milter_negotiate: mta_actions=0x%lx, mta_flags=0x%lx actions=0x%lx, flags=0x%lx\\n","reason":"Debug information about negotiated protocol options","resolution":"Informational log, no resolution required"},{"function":"mi_engine","message_template":"[%lu] milter_negotiate: testmode=%d, pflags2mta=%X, internal_pflags=%X\\n","reason":"Debug information about test mode and protocol flags","resolution":"Informational log, no resolution required"}]}