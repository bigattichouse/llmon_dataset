{"project":"sendmail","module":"..\/working\/sendmail\/libsm\/exc.c","summary":"This module implements an exception handling system for Sendmail, providing functions to create, manage, and raise exceptions. It includes standard exception types for OS errors and general errors, along with functionality to format and print exception messages to output streams.","logs":[{"function":"sm_etype_printf","message_template":"(null)","reason":"This message is displayed when a null string is encountered while formatting an exception message with a '%s' format specifier.","resolution":"This usually indicates a programming error where a null pointer was passed where a string was expected. Check the code path that created the exception for incorrect null handling."},{"function":"sm_etype_os_print","message_template":"%s: %s failed: %s","reason":"This message is used to report OS-level failures, showing the system arguments, the system call that failed, and the error string from the system.","resolution":"Check system permissions, resource availability, or configuration settings related to the specific system call mentioned in the log. The error message will provide specific guidance about what failed."},{"function":"sm_etype_os_print","message_template":"%s failed: %s","reason":"This message is used to report OS-level failures when there are no specific system arguments, showing the system call that failed and the error string from the system.","resolution":"Check system permissions, resource availability, or configuration settings related to the specific system call mentioned in the log. The error message will provide specific guidance about what failed."},{"function":"sm_exc_vnew_x","message_template":"sm_exc_vnew_x: bad argformat '%c'","reason":"This error occurs when an invalid format character is found in an exception type's argument format string.","resolution":"This is a programming error in the exception type definition. The code needs to be modified to use valid format characters (i, l, e, s, r) in the exception type's etype_argformat field."},{"function":"sm_exc_raise_x","message_template":"Any exception message","reason":"When no exception handler is defined, this function prints the exception message to the standard error and terminates the program with exit code 255.","resolution":"Properly handle exceptions in your code by providing appropriate exception handlers. This can be done using SM_TRY\/SM_EXCEPT blocks or by setting a default handler with sm_exc_newthread()."},{"function":"SmEtypeOs (exception type)","message_template":"open failed: Permission denied","reason":"An example of an OS exception that might occur when a system call like 'open' fails. The specific error message would depend on the system call and the error that occurred.","resolution":"Check file permissions, file existence, and other conditions relevant to the system call. For example, for file operations, ensure the user running sendmail has proper access to the files and directories involved."},{"function":"SmEtypeOs (exception type)","message_template":"open: \/etc\/mail\/sendmail.cf failed: No such file or directory","reason":"An example of an OS exception that occurs when attempting to open the sendmail configuration file, but it doesn't exist.","resolution":"Ensure the sendmail configuration file exists at the expected location or create it if missing. Check the permissions and ownership of the file to ensure it can be accessed by the sendmail process."},{"function":"SmEtypeErr (exception type)","message_template":"Custom error message","reason":"A generic error exception that can contain any custom error message. This is used primarily in applications and test programs.","resolution":"The resolution depends on the specific error message. In general, these are custom errors defined by application code rather than system-level errors."}]}