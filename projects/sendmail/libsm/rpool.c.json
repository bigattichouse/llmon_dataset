{"project":"sendmail","module":"..\/working\/sendmail\/libsm\/rpool.c","summary":"This module implements resource pools for memory management in sendmail, providing an efficient way to allocate and deallocate memory by grouping allocations with similar lifetimes. It includes functions for creating, managing, and freeing resource pools with mechanisms for tracking attached resources and performance metrics.","logs":[{"function":"sm_rpool_free","message_template":"perf: rpool=%lx, sm_nbigblocks=%d, sm_npools=%d","reason":"Logs performance metrics about the resource pool being freed, specifically the number of big blocks and pools allocated. This log is only generated when the _FFR_PERF_RPOOL feature flag is enabled and when the pool has used either big blocks or multiple pools.","resolution":"This is an informational log for performance monitoring. If these logs appear frequently with high values, consider adjusting the pool size settings using sm_rpool_setsizes() to optimize memory usage patterns for your application."},{"function":"sm_rpool_new_x","message_template":"*","reason":"Catches and re-raises any exception that occurs during parent pool attachment in resource pool creation.","resolution":"This exception handler is a pass-through that ensures proper cleanup when errors occur. Check for out-of-memory conditions or issues with the parent pool if exceptions are being raised here."},{"function":"sm_rpool_allocblock_x","message_template":"F:sm_heap","reason":"Throws an exception when memory allocation fails during block allocation for a resource pool.","resolution":"This indicates the system is running out of memory. Consider freeing other resources, increasing system memory, or optimizing memory usage in the application."}]}