{"project":"sendmail","module":"libsm\/mpeix.c","summary":"This module provides MPE (HP 3000) compatibility functions for sendmail, implementing dummy functions for missing system calls, wrapping around existing functions with different semantics, and creating an emulation layer for POSIX user\/group functionality not natively supported in MPE.","logs":[{"function":"chroot","message_template":"errno = ENOSYS","reason":"The chroot() function is not implemented in MPE. When sendmail attempts to use chroot-based functionality, it will fail with 'function not implemented' error.","resolution":"Configure sendmail to not use chroot on MPE systems, as it's not supported by the operating system. Use other security mechanisms available on MPE instead."},{"function":"sendmail_mpe_bind","message_template":"MPE privilege mode required for binding to ports < 1024","reason":"MPE requires elevated privileges (GETPRIVMODE) to bind to network ports less than 1024, similar to Unix requiring root for privileged ports.","resolution":"Ensure sendmail has appropriate privilege levels on MPE systems, or configure it to use non-privileged ports above 1024 if possible."},{"function":"sendmail_mpe_fcntl","message_template":"getsockname() failure for file descriptor","reason":"The fcntl wrapper couldn't determine whether the descriptor is a socket, file, or pipe due to getsockname() failure.","resolution":"Check that the file descriptor is valid and that socket operations are working correctly on the system. This could indicate a problem with the network subsystem on MPE."},{"function":"sendmail_mpe_getpwnam","message_template":"Username format validation failed (must have one dot separator and be uppercase)","reason":"MPE usernames must contain exactly one dot separator character and be in uppercase. This error occurs when trying to look up an invalid username format.","resolution":"Ensure all usernames used with sendmail on MPE follow the required format: UPPERCASE.USERNAME with exactly one dot. This may require mapping Unix-style usernames to MPE format."},{"function":"sendmail_mpe_setgid","message_template":"errno = EINVAL","reason":"Attempt to set a GID that is different from the current GID while not having UID 0 privileges (even emulated) will fail.","resolution":"Configure sendmail to operate with appropriate permissions on MPE. Note that on MPE, group ID changes have limited functionality compared to Unix systems."},{"function":"sendmail_mpe_setuid","message_template":"errno = EINVAL","reason":"Attempt to set UID to 0 (root) when the current effective UID is not 0 in emulation mode will fail.","resolution":"Sendmail should be configured with the correct initial permissions on MPE. The setuid emulation is designed to mimic Unix semantics but cannot provide true root capabilities."},{"function":"sendmail_mpe_setuid","message_template":"getcwd() failure","reason":"Unable to obtain the current working directory before changing user ID. MPE's setuid() changes the current directory to the new user's home directory, which this function tries to work around.","resolution":"Check for issues with filesystem access or disk space. Ensure the process has permission to access its current directory before changing user IDs."}]}