{"project":"sendmail","module":"..\/working\/sendmail\/libsm\/t-float.c","summary":"This module tests floating point formatting and parsing functionality in sendmail. It verifies that printf and scanf operations work correctly with double values, ensuring proper string representation and parsing of floating point numbers.","logs":[{"function":"main","message_template":"got %s instead\n","reason":"This message is logged when a floating point formatting test fails, showing the incorrect output that was produced instead of the expected value. Likely occurs when printf formatting for floating point values is incorrect.","resolution":"Check the formatting of floating point numbers in the codebase. This could indicate issues with the C library's printf implementation on the current platform."},{"function":"main","message_template":"wanted %f, got %f\n","reason":"This message is logged when a floating point parsing test fails, comparing the expected value with the actual parsed value. Occurs when sscanf fails to correctly parse a floating point number.","resolution":"Review the floating point parsing implementation. If this error occurs frequently, there might be issues with the floating point handling in the platform's C library."},{"function":"main","message_template":"error ignored since SM_CONF_BROKEN_STRTOD is set for this OS\n","reason":"This informational message is logged when a floating point parsing error is detected but ignored because the system is known to have a broken strtod implementation.","resolution":"This is expected on platforms with SM_CONF_BROKEN_STRTOD defined. No action needed as the code is handling a known platform limitation."}]}