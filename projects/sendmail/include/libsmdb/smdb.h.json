{"project":"sendmail","module":"..\/working\/sendmail\/include\/libsmdb\/smdb.h","summary":"This header file defines a database abstraction layer for Sendmail, providing interfaces for database operations such as open, close, get, put, delete, and cursor operations. It supports various database types including hash, btree, NDBM, and CDB, with consistent error handling across implementations.","logs":[{"function":"smdb_open_database","message_template":"Failed to open database %s: %s","reason":"Logs an error when a database cannot be opened. This could happen due to file permission issues, non-existent files, or corruption.","resolution":"Check file permissions, ensure the database file exists and is not corrupted. Verify the process has appropriate access rights."},{"function":"db_close_func","message_template":"Failed to close database: %s","reason":"Logs an error when a database cannot be properly closed. This could happen if there are pending transactions or the filesystem is having issues.","resolution":"Ensure all transactions are committed before closing. Check for disk space issues or filesystem errors."},{"function":"db_del_func","message_template":"Failed to delete key from database: %s","reason":"Logs an error when a key cannot be deleted from the database. This might happen due to concurrent access issues or database corruption.","resolution":"Check database locks, ensure proper synchronization between processes accessing the database. Consider rebuilding the database if corruption is suspected."},{"function":"db_get_func","message_template":"Failed to retrieve key from database: %s","reason":"Logs an error when a key cannot be retrieved from the database. This could happen if the key doesn't exist or if there are access issues.","resolution":"Verify the key exists in the database. Check for access permissions and database corruption."},{"function":"db_put_func","message_template":"Failed to store key in database: %s","reason":"Logs an error when a key cannot be stored in the database. This might happen due to disk space issues or if the key already exists with SMDBF_NO_OVERWRITE flag set.","resolution":"Check disk space availability. If using SMDBF_NO_OVERWRITE flag, verify if the key already exists and handle accordingly."},{"function":"db_sync_func","message_template":"Failed to sync database to disk: %s","reason":"Logs an error when changes cannot be synced to disk. This could happen due to filesystem issues or disk failures.","resolution":"Check disk health and filesystem status. Ensure the process has write permissions."},{"function":"db_set_owner_func","message_template":"Failed to set owner of database files: %s","reason":"Logs an error when ownership of database files cannot be changed. This typically happens due to permission issues.","resolution":"Ensure the process has sufficient privileges to change file ownership. May need to run with elevated permissions."},{"function":"db_cursor_func","message_template":"Failed to create database cursor: %s","reason":"Logs an error when a cursor for sequential access cannot be created. This might happen due to memory issues or database inconsistencies.","resolution":"Check system memory availability. Ensure the database is not corrupted."},{"function":"db_cursor_close_func","message_template":"Failed to close database cursor: %s","reason":"Logs an error when a cursor cannot be properly closed. This could indicate resource leaks or system issues.","resolution":"Check for memory leaks or resource exhaustion. May need to restart the process if recurring."},{"function":"db_cursor_get_func","message_template":"Failed to get entry at cursor position: %s","reason":"Logs an error when retrieving data at the cursor position fails. This might happen if the cursor is invalidated or the database structure changed.","resolution":"Recreate the cursor if needed. Check for concurrent modifications to the database."},{"function":"db_cursor_put_func","message_template":"Failed to put entry at cursor position: %s","reason":"Logs an error when storing data at the cursor position fails. This could happen due to database constraints or disk issues.","resolution":"Check disk space and database constraints. Ensure the cursor is positioned correctly."},{"function":"smdb_lock_file","message_template":"Failed to lock database file %s: %s","reason":"Logs an error when a database file cannot be locked. This typically happens when another process has already locked the file.","resolution":"Check for other processes that might be holding locks on the database file. May need to terminate stale processes or use forced unlocking if supported."},{"function":"smdb_unlock_file","message_template":"Failed to unlock database file: %s","reason":"Logs an error when a database file cannot be unlocked. This could indicate a system resource issue.","resolution":"Check system state for lock-related resources. May require system restart if locks are in an inconsistent state."},{"function":"smdb_setup_file","message_template":"Failed to setup database file %s: %s","reason":"Logs an error when initializing a database file fails. This could happen due to permission issues or filesystem constraints.","resolution":"Check file permissions and filesystem status. Ensure sufficient disk space and inodes are available."},{"function":"smdb_filechanged","message_template":"Database file %s has changed while in use","reason":"Logs a warning when a database file is modified by another process while in use. This could lead to inconsistent data.","resolution":"Implement proper file locking or coordination between processes accessing the database. May need to reload the database."},{"function":"smdb_is_db_type","message_template":"Invalid database type: %s","reason":"Logs an error when an invalid database type is specified. Valid types include hash, btree, dbm, and cdb.","resolution":"Use one of the supported database types: hash, btree, dbm, or cdb. Check configuration files for typos."}]}