{"project":"sendmail","module":"libsmutil\/t-lockfile.c","summary":"This module is a test utility for file locking functionality in sendmail, testing both read and write locking mechanisms (shared and exclusive). It verifies proper file access control by creating owner and client processes that attempt to acquire locks and perform I\/O operations.","logs":[{"function":"openfile","message_template":"%d: %ld: owner=%d, open(%s) failed\n","reason":"Reports failure to open a file with the specified flags and permissions. This occurs when the file cannot be created or accessed for reading\/writing.","resolution":"Check file permissions, directory access rights, and ensure the path exists. May require adjusting file system permissions or fixing path issues."},{"function":"wrbuf","message_template":"%d: %ld: owner=1, write(%s)=fail\n","reason":"Reports failure to write the expected amount of data to the file. This could happen due to disk space issues or I\/O errors.","resolution":"Check available disk space, file system integrity, and file permissions. May require freeing disk space or fixing file system issues."},{"function":"rdbuf","message_template":"%d: %ld: owner=0, read()=fail\n","reason":"Reports failure to read the expected amount of data from the file. This could happen due to file corruption or I\/O errors.","resolution":"Check file integrity, ensure the file hasn't been truncated or corrupted. May require recreating the file or fixing hardware I\/O issues."},{"function":"rdbuf","message_template":"%d: %ld: owner=0, read=%s expected=%s\n","reason":"Reports a mismatch between the data read from the file and the expected data. This indicates potential file corruption or concurrent writes.","resolution":"Check for concurrent access to the file by multiple processes. Ensure proper locking mechanisms are in place before writing to the file."},{"function":"locktestwr","message_template":"%d: %ld: owner=1, lock(%s) failed\n","reason":"Reports failure to acquire an exclusive lock on the file as the owner process. This could happen if another process already holds a lock.","resolution":"Check for other processes holding locks on the file. May require terminating competing processes or waiting for locks to be released."},{"function":"locktestwr","message_template":"%d: %ld: owner=1, lock(%s) ok\n","reason":"Reports successful acquisition of an exclusive lock on the file as the owner process.","resolution":"Informational log, no resolution required."},{"function":"locktestwr","message_template":"%d: %ld: owner=1, unlock(%s) failed\n","reason":"Reports failure to release a lock on the file as the owner process. This could indicate system resource issues.","resolution":"Check system resources and consider restarting the application. This error typically indicates serious system-level issues with file locking."},{"function":"locktestwr","message_template":"%d: %ld: owner=1, unlock(%s) done\n","reason":"Reports successful release of a lock on the file as the owner process.","resolution":"Informational log, no resolution required."},{"function":"chklck","message_template":"%d: %ld: flock(): no lock test\n","reason":"Reports that lock testing is not available when using flock() locking mechanism (as opposed to fcntl()).","resolution":"If lock testing is required, consider reconfiguring the system to use fcntl() locking rather than flock()."},{"function":"locktestrd","message_template":"%d: %ld: file=%s status=locked pid=%ld\n","reason":"Reports that the file is currently locked by another process (identified by PID).","resolution":"Wait for the locking process to release the lock or investigate if the process is hung and may need to be terminated."},{"function":"locktestrd","message_template":"%d: %ld: file=%s status=not_locked\n","reason":"Reports that the file is currently not locked by any process.","resolution":"Informational log, no resolution required."},{"function":"locktestrd","message_template":"%d: %ld: file=%s status=unknown\n","reason":"Reports that the lock status of the file cannot be determined. This could indicate system resource issues.","resolution":"Check system resources and file system status. May require system administrator intervention if issues persist."},{"function":"locktestrd","message_template":"lock(%s)=%s succeeded\n","reason":"Reports unexpected success in acquiring a lock as the client process when it should have failed (during the owner's lock period).","resolution":"Check lock implementation as this indicates a potential failure in the locking mechanism. Lock contention should prevent simultaneous locks."},{"function":"locktestrd","message_template":"lock(%s)=%s failed\n","reason":"Reports failure to acquire a lock as the client process when it should have succeeded (after the owner's lock period).","resolution":"Check if another process is holding the lock unexpectedly. May require investigating process behavior or lock implementation issues."},{"function":"locktestrd","message_template":"lock(%s)=%s ok\n","reason":"Reports successful acquisition of a lock (either shared or exclusive) as the client process.","resolution":"Informational log, no resolution required."},{"function":"locktestrd","message_template":"unlock(%s)=%s failed\n","reason":"Reports failure to release a lock as the client process. This could indicate system resource issues.","resolution":"Check system resources and consider restarting the application. This error typically indicates serious system-level issues with file locking."},{"function":"locktestrd","message_template":"unlock(%s)=%s done\n","reason":"Reports successful release of a lock as the client process.","resolution":"Informational log, no resolution required."},{"function":"usage","message_template":"usage: %s [options]\n-f filename\tuse filename\n-i\t\tdo not perform I\/O\n-n\t\tdo not try non-blocking locking first\n-R\t\tonly start reader process\n-r\t\tuse shared locking for reader\n-s delay\tsleep delay seconds before unlocking\n-W\t\tonly start writer process\n","reason":"Displays usage information when the program is invoked with incorrect or insufficient arguments.","resolution":"Follow the usage instructions to provide correct command-line arguments to the program."},{"function":"main","message_template":"fork failed\n","reason":"Reports failure to fork a child process. This occurs when the system cannot create a new process, typically due to resource constraints.","resolution":"Check system resources, particularly process limits and available memory. May require freeing up system resources or increasing process limits."}]}