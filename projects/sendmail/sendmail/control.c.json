{"project":"sendmail","module":"..\/working\/sendmail\/sendmail\/control.c","summary":"This module handles the control socket interface for the sendmail daemon, allowing external programs to issue commands like status, restart, and shutdown. It provides functionality to create, manage, and process commands through a named Unix socket.","logs":[{"function":"opencontrolsocket","message_template":"ownership change on %s to uid %d failed: %s","reason":"Logs an alert when the daemon cannot change the ownership of the control socket to the specified user ID. This typically happens when running as root and attempting to change ownership to a less privileged user.","resolution":"Check that the specified user ID exists and that the process has sufficient permissions to change ownership. May require adjusting permissions or running the daemon with different privileges."},{"function":"opencontrolsocket","message_template":"050 ownership change on %s to uid %d failed: %s","reason":"Sends a message to the client indicating that changing the ownership of the control socket has failed. This is directly related to the previous log entry but is sent to the client rather than to syslog.","resolution":"Same as for the syslog message - check user ID validity and permission settings. May require administrative intervention to fix file system permissions."},{"function":"closecontrolsocket","message_template":"Could not remove control socket: %s","reason":"Logs a warning when the daemon cannot remove the control socket file during cleanup. This could happen during shutdown or restart operations.","resolution":"Check file system permissions and ensure that no other process is using the socket. May require manual removal of the socket file if it persists after daemon shutdown."},{"function":"control_command","message_template":"timeout waiting for input during control command","reason":"Logs a notice when a client connects to the control socket but does not send a command within the configured timeout period. This could indicate a client problem or a potential denial of service attempt.","resolution":"If this occurs frequently, consider adjusting the timeout value or investigating client applications that might be connecting but not sending commands properly."},{"function":"control_command","message_template":"control cmd read","reason":"Sets the process title to indicate that the daemon is reading a control command. This appears in process listings and potentially in logs.","resolution":"This is informational and doesn't require resolution. If you see many processes stuck in this state, it might indicate clients not completing their requests."},{"function":"control_command","message_template":"control: %s","reason":"Sets the process title to show which control command is being processed. This appears in process listings and potentially in logs.","resolution":"This is informational and doesn't require resolution. It can be useful for monitoring which commands are being executed via the control socket."},{"function":"control_command","message_template":"Memory dump unavailable.\r\n","reason":"Response sent to client when a memory dump is requested but not available because the required debugging flags aren't enabled.","resolution":"If memory dumps are needed for debugging, rebuild sendmail with SM_HEAP_CHECK defined or run with the appropriate debug flags as mentioned in the following message."},{"function":"control_command","message_template":"To fix, run sendmail with -dsm_check_heap.4\r\n","reason":"Response sent to client providing instructions on how to enable memory dump capability when SM_HEAP_CHECK is defined but not active.","resolution":"If memory dumps are needed, restart sendmail with the specified debug flag (-dsm_check_heap.4)."},{"function":"control_command","message_template":"To fix, rebuild with -DSM_HEAP_CHECK\r\n","reason":"Response sent to client providing instructions on how to enable memory dump capability when SM_HEAP_CHECK is not defined in the build.","resolution":"If memory dumps are needed, rebuild sendmail with the SM_HEAP_CHECK compile-time option."},{"function":"control_command","message_template":"Bad command (%s)\r\n","reason":"Response sent to client when an unrecognized command is received through the control socket.","resolution":"Check the client application and ensure it's sending valid commands. Valid commands include help, restart, shutdown, status, memdump, and mstat."}]}